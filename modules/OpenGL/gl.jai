//
// This file was autogenerated.
//



KHRONOS_SUPPORT_INT64 :: 1;
KHRONOS_SUPPORT_FLOAT :: 1;

KHRONOS_MAX_ENUM :: 0x7FFFFFFF;

/*
* Enumerated boolean type
*
* Values other than zero should be considered to be true.  Therefore
* comparisons should not be made against KHRONOS_TRUE.
*/
khronos_boolean_enum_t :: enum u32 {
    FALSE                   :: 0;
    TRUE                    :: 1;
    BOOLEAN_ENUM_FORCE_SIZE :: 2147483647;

    KHRONOS_FALSE                   :: FALSE;
    KHRONOS_TRUE                    :: TRUE;
    KHRONOS_BOOLEAN_ENUM_FORCE_SIZE :: BOOLEAN_ENUM_FORCE_SIZE;
}

GLenum :: u32;
GLboolean :: u8;
GLbitfield :: u32;
GLvoid :: void;
GLbyte :: s8;
GLubyte :: u8;
GLshort :: s16;
GLushort :: u16;
GLint :: s32;
GLuint :: u32;
GLclampx :: s32;
GLsizei :: s32;
GLfloat :: float;
GLclampf :: float;
GLdouble :: float64;
GLclampd :: float64;
GLeglClientBufferEXT :: *void;
GLeglImageOES :: *void;
GLchar :: u8;
GLcharARB :: u8;

#if OS == .MACOS {
    GLhandleARB :: *void;
} else {
    GLhandleARB :: u32;
}

GLhalf :: u16;
GLhalfARB :: u16;
GLfixed :: s32;
GLintptr :: s64;
GLintptrARB :: s64;
GLsizeiptr :: s64;
GLsizeiptrARB :: s64;
GLint64 :: s64;
GLint64EXT :: s64;
GLuint64 :: u64;
GLuint64EXT :: u64;
__GLsync :: struct {}
GLsync :: *__GLsync;
_cl_context :: struct {}
_cl_event :: struct {}
GLDEBUGPROC :: #type (source: GLenum, type: GLenum, id: GLuint, severity: GLenum, length: GLsizei, message: *GLchar, userParam: *void) -> void #c_call;
GLDEBUGPROCARB :: #type (source: GLenum, type: GLenum, id: GLuint, severity: GLenum, length: GLsizei, message: *GLchar, userParam: *void) -> void #c_call;
GLDEBUGPROCKHR :: #type (source: GLenum, type: GLenum, id: GLuint, severity: GLenum, length: GLsizei, message: *GLchar, userParam: *void) -> void #c_call;
GLDEBUGPROCAMD :: #type (id: GLuint, category: GLenum, severity: GLenum, length: GLsizei, message: *GLchar, userParam: *void) -> void #c_call;
GLhalfNV :: u16;
GLvdpauSurfaceNV :: GLintptr;
GLVULKANPROCNV :: #type () -> void #c_call;


// GL_VERSION_1_0
GL_DEPTH_BUFFER_BIT :: 0x00000100;
GL_STENCIL_BUFFER_BIT :: 0x00000400;
GL_COLOR_BUFFER_BIT :: 0x00004000;
GL_FALSE :: 0;
GL_TRUE :: 1;
GL_POINTS :: 0x0000;
GL_LINES :: 0x0001;
GL_LINE_LOOP :: 0x0002;
GL_LINE_STRIP :: 0x0003;
GL_TRIANGLES :: 0x0004;
GL_TRIANGLE_STRIP :: 0x0005;
GL_TRIANGLE_FAN :: 0x0006;
GL_QUADS :: 0x0007;
GL_NEVER :: 0x0200;
GL_LESS :: 0x0201;
GL_EQUAL :: 0x0202;
GL_LEQUAL :: 0x0203;
GL_GREATER :: 0x0204;
GL_NOTEQUAL :: 0x0205;
GL_GEQUAL :: 0x0206;
GL_ALWAYS :: 0x0207;
GL_ZERO :: 0;
GL_ONE :: 1;
GL_SRC_COLOR :: 0x0300;
GL_ONE_MINUS_SRC_COLOR :: 0x0301;
GL_SRC_ALPHA :: 0x0302;
GL_ONE_MINUS_SRC_ALPHA :: 0x0303;
GL_DST_ALPHA :: 0x0304;
GL_ONE_MINUS_DST_ALPHA :: 0x0305;
GL_DST_COLOR :: 0x0306;
GL_ONE_MINUS_DST_COLOR :: 0x0307;
GL_SRC_ALPHA_SATURATE :: 0x0308;
GL_NONE :: 0;
GL_FRONT_LEFT :: 0x0400;
GL_FRONT_RIGHT :: 0x0401;
GL_BACK_LEFT :: 0x0402;
GL_BACK_RIGHT :: 0x0403;
GL_FRONT :: 0x0404;
GL_BACK :: 0x0405;
GL_LEFT :: 0x0406;
GL_RIGHT :: 0x0407;
GL_FRONT_AND_BACK :: 0x0408;
GL_NO_ERROR :: 0;
GL_INVALID_ENUM :: 0x0500;
GL_INVALID_VALUE :: 0x0501;
GL_INVALID_OPERATION :: 0x0502;
GL_OUT_OF_MEMORY :: 0x0505;
GL_CW :: 0x0900;
GL_CCW :: 0x0901;
GL_POINT_SIZE :: 0x0B11;
GL_POINT_SIZE_RANGE :: 0x0B12;
GL_POINT_SIZE_GRANULARITY :: 0x0B13;
GL_LINE_SMOOTH :: 0x0B20;
GL_LINE_WIDTH :: 0x0B21;
GL_LINE_WIDTH_RANGE :: 0x0B22;
GL_LINE_WIDTH_GRANULARITY :: 0x0B23;
GL_POLYGON_MODE :: 0x0B40;
GL_POLYGON_SMOOTH :: 0x0B41;
GL_CULL_FACE :: 0x0B44;
GL_CULL_FACE_MODE :: 0x0B45;
GL_FRONT_FACE :: 0x0B46;
GL_DEPTH_RANGE :: 0x0B70;
GL_DEPTH_TEST :: 0x0B71;
GL_DEPTH_WRITEMASK :: 0x0B72;
GL_DEPTH_CLEAR_VALUE :: 0x0B73;
GL_DEPTH_FUNC :: 0x0B74;
GL_STENCIL_TEST :: 0x0B90;
GL_STENCIL_CLEAR_VALUE :: 0x0B91;
GL_STENCIL_FUNC :: 0x0B92;
GL_STENCIL_VALUE_MASK :: 0x0B93;
GL_STENCIL_FAIL :: 0x0B94;
GL_STENCIL_PASS_DEPTH_FAIL :: 0x0B95;
GL_STENCIL_PASS_DEPTH_PASS :: 0x0B96;
GL_STENCIL_REF :: 0x0B97;
GL_STENCIL_WRITEMASK :: 0x0B98;
GL_VIEWPORT :: 0x0BA2;
GL_DITHER :: 0x0BD0;
GL_BLEND_DST :: 0x0BE0;
GL_BLEND_SRC :: 0x0BE1;
GL_BLEND :: 0x0BE2;
GL_LOGIC_OP_MODE :: 0x0BF0;
GL_DRAW_BUFFER :: 0x0C01;
GL_READ_BUFFER :: 0x0C02;
GL_SCISSOR_BOX :: 0x0C10;
GL_SCISSOR_TEST :: 0x0C11;
GL_COLOR_CLEAR_VALUE :: 0x0C22;
GL_COLOR_WRITEMASK :: 0x0C23;
GL_DOUBLEBUFFER :: 0x0C32;
GL_STEREO :: 0x0C33;
GL_LINE_SMOOTH_HINT :: 0x0C52;
GL_POLYGON_SMOOTH_HINT :: 0x0C53;
GL_UNPACK_SWAP_BYTES :: 0x0CF0;
GL_UNPACK_LSB_FIRST :: 0x0CF1;
GL_UNPACK_ROW_LENGTH :: 0x0CF2;
GL_UNPACK_SKIP_ROWS :: 0x0CF3;
GL_UNPACK_SKIP_PIXELS :: 0x0CF4;
GL_UNPACK_ALIGNMENT :: 0x0CF5;
GL_PACK_SWAP_BYTES :: 0x0D00;
GL_PACK_LSB_FIRST :: 0x0D01;
GL_PACK_ROW_LENGTH :: 0x0D02;
GL_PACK_SKIP_ROWS :: 0x0D03;
GL_PACK_SKIP_PIXELS :: 0x0D04;
GL_PACK_ALIGNMENT :: 0x0D05;
GL_MAX_TEXTURE_SIZE :: 0x0D33;
GL_MAX_VIEWPORT_DIMS :: 0x0D3A;
GL_SUBPIXEL_BITS :: 0x0D50;
GL_TEXTURE_1D :: 0x0DE0;
GL_TEXTURE_2D :: 0x0DE1;
GL_TEXTURE_WIDTH :: 0x1000;
GL_TEXTURE_HEIGHT :: 0x1001;
GL_TEXTURE_BORDER_COLOR :: 0x1004;
GL_DONT_CARE :: 0x1100;
GL_FASTEST :: 0x1101;
GL_NICEST :: 0x1102;
GL_BYTE :: 0x1400;
GL_UNSIGNED_BYTE :: 0x1401;
GL_SHORT :: 0x1402;
GL_UNSIGNED_SHORT :: 0x1403;
GL_INT :: 0x1404;
GL_UNSIGNED_INT :: 0x1405;
GL_FLOAT :: 0x1406;
GL_STACK_OVERFLOW :: 0x0503;
GL_STACK_UNDERFLOW :: 0x0504;
GL_CLEAR :: 0x1500;
GL_AND :: 0x1501;
GL_AND_REVERSE :: 0x1502;
GL_COPY :: 0x1503;
GL_AND_INVERTED :: 0x1504;
GL_NOOP :: 0x1505;
GL_XOR :: 0x1506;
GL_OR :: 0x1507;
GL_NOR :: 0x1508;
GL_EQUIV :: 0x1509;
GL_INVERT :: 0x150A;
GL_OR_REVERSE :: 0x150B;
GL_COPY_INVERTED :: 0x150C;
GL_OR_INVERTED :: 0x150D;
GL_NAND :: 0x150E;
GL_SET :: 0x150F;
GL_TEXTURE :: 0x1702;
GL_COLOR :: 0x1800;
GL_DEPTH :: 0x1801;
GL_STENCIL :: 0x1802;
GL_STENCIL_INDEX :: 0x1901;
GL_DEPTH_COMPONENT :: 0x1902;
GL_RED :: 0x1903;
GL_GREEN :: 0x1904;
GL_BLUE :: 0x1905;
GL_ALPHA :: 0x1906;
GL_RGB :: 0x1907;
GL_RGBA :: 0x1908;
GL_POINT :: 0x1B00;
GL_LINE :: 0x1B01;
GL_FILL :: 0x1B02;
GL_KEEP :: 0x1E00;
GL_REPLACE :: 0x1E01;
GL_INCR :: 0x1E02;
GL_DECR :: 0x1E03;
GL_VENDOR :: 0x1F00;
GL_RENDERER :: 0x1F01;
GL_VERSION :: 0x1F02;
GL_EXTENSIONS :: 0x1F03;
GL_NEAREST :: 0x2600;
GL_LINEAR :: 0x2601;
GL_NEAREST_MIPMAP_NEAREST :: 0x2700;
GL_LINEAR_MIPMAP_NEAREST :: 0x2701;
GL_NEAREST_MIPMAP_LINEAR :: 0x2702;
GL_LINEAR_MIPMAP_LINEAR :: 0x2703;
GL_TEXTURE_MAG_FILTER :: 0x2800;
GL_TEXTURE_MIN_FILTER :: 0x2801;
GL_TEXTURE_WRAP_S :: 0x2802;
GL_TEXTURE_WRAP_T :: 0x2803;
GL_REPEAT :: 0x2901;
GL_CURRENT_BIT :: 0x00000001;
GL_POINT_BIT :: 0x00000002;
GL_LINE_BIT :: 0x00000004;
GL_POLYGON_BIT :: 0x00000008;
GL_POLYGON_STIPPLE_BIT :: 0x00000010;
GL_PIXEL_MODE_BIT :: 0x00000020;
GL_LIGHTING_BIT :: 0x00000040;
GL_FOG_BIT :: 0x00000080;
GL_ACCUM_BUFFER_BIT :: 0x00000200;
GL_VIEWPORT_BIT :: 0x00000800;
GL_TRANSFORM_BIT :: 0x00001000;
GL_ENABLE_BIT :: 0x00002000;
GL_HINT_BIT :: 0x00008000;
GL_EVAL_BIT :: 0x00010000;
GL_LIST_BIT :: 0x00020000;
GL_TEXTURE_BIT :: 0x00040000;
GL_SCISSOR_BIT :: 0x00080000;
GL_ALL_ATTRIB_BITS :: 0xFFFFFFFF;  // Guaranteed to mark all attribute groups at once
GL_QUAD_STRIP :: 0x0008;
GL_POLYGON :: 0x0009;
GL_ACCUM :: 0x0100;
GL_LOAD :: 0x0101;
GL_RETURN :: 0x0102;
GL_MULT :: 0x0103;
GL_ADD :: 0x0104;
GL_AUX0 :: 0x0409;
GL_AUX1 :: 0x040A;
GL_AUX2 :: 0x040B;
GL_AUX3 :: 0x040C;
GL_2D :: 0x0600;
GL_3D :: 0x0601;
GL_3D_COLOR :: 0x0602;
GL_3D_COLOR_TEXTURE :: 0x0603;
GL_4D_COLOR_TEXTURE :: 0x0604;
GL_PASS_THROUGH_TOKEN :: 0x0700;
GL_POINT_TOKEN :: 0x0701;
GL_LINE_TOKEN :: 0x0702;
GL_POLYGON_TOKEN :: 0x0703;
GL_BITMAP_TOKEN :: 0x0704;
GL_DRAW_PIXEL_TOKEN :: 0x0705;
GL_COPY_PIXEL_TOKEN :: 0x0706;
GL_LINE_RESET_TOKEN :: 0x0707;
GL_EXP :: 0x0800;
GL_EXP2 :: 0x0801;
GL_COEFF :: 0x0A00;
GL_ORDER :: 0x0A01;
GL_DOMAIN :: 0x0A02;
GL_PIXEL_MAP_I_TO_I :: 0x0C70;
GL_PIXEL_MAP_S_TO_S :: 0x0C71;
GL_PIXEL_MAP_I_TO_R :: 0x0C72;
GL_PIXEL_MAP_I_TO_G :: 0x0C73;
GL_PIXEL_MAP_I_TO_B :: 0x0C74;
GL_PIXEL_MAP_I_TO_A :: 0x0C75;
GL_PIXEL_MAP_R_TO_R :: 0x0C76;
GL_PIXEL_MAP_G_TO_G :: 0x0C77;
GL_PIXEL_MAP_B_TO_B :: 0x0C78;
GL_PIXEL_MAP_A_TO_A :: 0x0C79;
GL_CURRENT_COLOR :: 0x0B00;
GL_CURRENT_INDEX :: 0x0B01;
GL_CURRENT_NORMAL :: 0x0B02;
GL_CURRENT_TEXTURE_COORDS :: 0x0B03;
GL_CURRENT_RASTER_COLOR :: 0x0B04;
GL_CURRENT_RASTER_INDEX :: 0x0B05;
GL_CURRENT_RASTER_TEXTURE_COORDS :: 0x0B06;
GL_CURRENT_RASTER_POSITION :: 0x0B07;
GL_CURRENT_RASTER_POSITION_VALID :: 0x0B08;
GL_CURRENT_RASTER_DISTANCE :: 0x0B09;
GL_POINT_SMOOTH :: 0x0B10;
GL_LINE_STIPPLE :: 0x0B24;
GL_LINE_STIPPLE_PATTERN :: 0x0B25;
GL_LINE_STIPPLE_REPEAT :: 0x0B26;
GL_LIST_MODE :: 0x0B30;
GL_MAX_LIST_NESTING :: 0x0B31;
GL_LIST_BASE :: 0x0B32;
GL_LIST_INDEX :: 0x0B33;
GL_POLYGON_STIPPLE :: 0x0B42;
GL_EDGE_FLAG :: 0x0B43;
GL_LIGHTING :: 0x0B50;
GL_LIGHT_MODEL_LOCAL_VIEWER :: 0x0B51;
GL_LIGHT_MODEL_TWO_SIDE :: 0x0B52;
GL_LIGHT_MODEL_AMBIENT :: 0x0B53;
GL_SHADE_MODEL :: 0x0B54;
GL_COLOR_MATERIAL_FACE :: 0x0B55;
GL_COLOR_MATERIAL_PARAMETER :: 0x0B56;
GL_COLOR_MATERIAL :: 0x0B57;
GL_FOG :: 0x0B60;
GL_FOG_INDEX :: 0x0B61;
GL_FOG_DENSITY :: 0x0B62;
GL_FOG_START :: 0x0B63;
GL_FOG_END :: 0x0B64;
GL_FOG_MODE :: 0x0B65;
GL_FOG_COLOR :: 0x0B66;
GL_ACCUM_CLEAR_VALUE :: 0x0B80;
GL_MATRIX_MODE :: 0x0BA0;
GL_NORMALIZE :: 0x0BA1;
GL_MODELVIEW_STACK_DEPTH :: 0x0BA3;
GL_PROJECTION_STACK_DEPTH :: 0x0BA4;
GL_TEXTURE_STACK_DEPTH :: 0x0BA5;
GL_MODELVIEW_MATRIX :: 0x0BA6;
GL_PROJECTION_MATRIX :: 0x0BA7;
GL_TEXTURE_MATRIX :: 0x0BA8;
GL_ATTRIB_STACK_DEPTH :: 0x0BB0;
GL_ALPHA_TEST :: 0x0BC0;
GL_ALPHA_TEST_FUNC :: 0x0BC1;
GL_ALPHA_TEST_REF :: 0x0BC2;
GL_LOGIC_OP :: 0x0BF1;
GL_AUX_BUFFERS :: 0x0C00;
GL_INDEX_CLEAR_VALUE :: 0x0C20;
GL_INDEX_WRITEMASK :: 0x0C21;
GL_INDEX_MODE :: 0x0C30;
GL_RGBA_MODE :: 0x0C31;
GL_RENDER_MODE :: 0x0C40;
GL_PERSPECTIVE_CORRECTION_HINT :: 0x0C50;
GL_POINT_SMOOTH_HINT :: 0x0C51;
GL_FOG_HINT :: 0x0C54;
GL_TEXTURE_GEN_S :: 0x0C60;
GL_TEXTURE_GEN_T :: 0x0C61;
GL_TEXTURE_GEN_R :: 0x0C62;
GL_TEXTURE_GEN_Q :: 0x0C63;
GL_PIXEL_MAP_I_TO_I_SIZE :: 0x0CB0;
GL_PIXEL_MAP_S_TO_S_SIZE :: 0x0CB1;
GL_PIXEL_MAP_I_TO_R_SIZE :: 0x0CB2;
GL_PIXEL_MAP_I_TO_G_SIZE :: 0x0CB3;
GL_PIXEL_MAP_I_TO_B_SIZE :: 0x0CB4;
GL_PIXEL_MAP_I_TO_A_SIZE :: 0x0CB5;
GL_PIXEL_MAP_R_TO_R_SIZE :: 0x0CB6;
GL_PIXEL_MAP_G_TO_G_SIZE :: 0x0CB7;
GL_PIXEL_MAP_B_TO_B_SIZE :: 0x0CB8;
GL_PIXEL_MAP_A_TO_A_SIZE :: 0x0CB9;
GL_MAP_COLOR :: 0x0D10;
GL_MAP_STENCIL :: 0x0D11;
GL_INDEX_SHIFT :: 0x0D12;
GL_INDEX_OFFSET :: 0x0D13;
GL_RED_SCALE :: 0x0D14;
GL_RED_BIAS :: 0x0D15;
GL_ZOOM_X :: 0x0D16;
GL_ZOOM_Y :: 0x0D17;
GL_GREEN_SCALE :: 0x0D18;
GL_GREEN_BIAS :: 0x0D19;
GL_BLUE_SCALE :: 0x0D1A;
GL_BLUE_BIAS :: 0x0D1B;
GL_ALPHA_SCALE :: 0x0D1C;
GL_ALPHA_BIAS :: 0x0D1D;
GL_DEPTH_SCALE :: 0x0D1E;
GL_DEPTH_BIAS :: 0x0D1F;
GL_MAX_EVAL_ORDER :: 0x0D30;
GL_MAX_LIGHTS :: 0x0D31;
GL_MAX_CLIP_PLANES :: 0x0D32;
GL_MAX_PIXEL_MAP_TABLE :: 0x0D34;
GL_MAX_ATTRIB_STACK_DEPTH :: 0x0D35;
GL_MAX_MODELVIEW_STACK_DEPTH :: 0x0D36;
GL_MAX_NAME_STACK_DEPTH :: 0x0D37;
GL_MAX_PROJECTION_STACK_DEPTH :: 0x0D38;
GL_MAX_TEXTURE_STACK_DEPTH :: 0x0D39;
GL_INDEX_BITS :: 0x0D51;
GL_RED_BITS :: 0x0D52;
GL_GREEN_BITS :: 0x0D53;
GL_BLUE_BITS :: 0x0D54;
GL_ALPHA_BITS :: 0x0D55;
GL_DEPTH_BITS :: 0x0D56;
GL_STENCIL_BITS :: 0x0D57;
GL_ACCUM_RED_BITS :: 0x0D58;
GL_ACCUM_GREEN_BITS :: 0x0D59;
GL_ACCUM_BLUE_BITS :: 0x0D5A;
GL_ACCUM_ALPHA_BITS :: 0x0D5B;
GL_NAME_STACK_DEPTH :: 0x0D70;
GL_AUTO_NORMAL :: 0x0D80;
GL_MAP1_COLOR_4 :: 0x0D90;
GL_MAP1_INDEX :: 0x0D91;
GL_MAP1_NORMAL :: 0x0D92;
GL_MAP1_TEXTURE_COORD_1 :: 0x0D93;
GL_MAP1_TEXTURE_COORD_2 :: 0x0D94;
GL_MAP1_TEXTURE_COORD_3 :: 0x0D95;
GL_MAP1_TEXTURE_COORD_4 :: 0x0D96;
GL_MAP1_VERTEX_3 :: 0x0D97;
GL_MAP1_VERTEX_4 :: 0x0D98;
GL_MAP2_COLOR_4 :: 0x0DB0;
GL_MAP2_INDEX :: 0x0DB1;
GL_MAP2_NORMAL :: 0x0DB2;
GL_MAP2_TEXTURE_COORD_1 :: 0x0DB3;
GL_MAP2_TEXTURE_COORD_2 :: 0x0DB4;
GL_MAP2_TEXTURE_COORD_3 :: 0x0DB5;
GL_MAP2_TEXTURE_COORD_4 :: 0x0DB6;
GL_MAP2_VERTEX_3 :: 0x0DB7;
GL_MAP2_VERTEX_4 :: 0x0DB8;
GL_MAP1_GRID_DOMAIN :: 0x0DD0;
GL_MAP1_GRID_SEGMENTS :: 0x0DD1;
GL_MAP2_GRID_DOMAIN :: 0x0DD2;
GL_MAP2_GRID_SEGMENTS :: 0x0DD3;
GL_TEXTURE_COMPONENTS :: 0x1003;
GL_TEXTURE_BORDER :: 0x1005;
GL_AMBIENT :: 0x1200;
GL_DIFFUSE :: 0x1201;
GL_SPECULAR :: 0x1202;
GL_POSITION :: 0x1203;
GL_SPOT_DIRECTION :: 0x1204;
GL_SPOT_EXPONENT :: 0x1205;
GL_SPOT_CUTOFF :: 0x1206;
GL_CONSTANT_ATTENUATION :: 0x1207;
GL_LINEAR_ATTENUATION :: 0x1208;
GL_QUADRATIC_ATTENUATION :: 0x1209;
GL_COMPILE :: 0x1300;
GL_COMPILE_AND_EXECUTE :: 0x1301;
GL_2_BYTES :: 0x1407;
GL_3_BYTES :: 0x1408;
GL_4_BYTES :: 0x1409;
GL_EMISSION :: 0x1600;
GL_SHININESS :: 0x1601;
GL_AMBIENT_AND_DIFFUSE :: 0x1602;
GL_COLOR_INDEXES :: 0x1603;
GL_MODELVIEW :: 0x1700;
GL_PROJECTION :: 0x1701;
GL_COLOR_INDEX :: 0x1900;
GL_LUMINANCE :: 0x1909;
GL_LUMINANCE_ALPHA :: 0x190A;
GL_BITMAP :: 0x1A00;
GL_RENDER :: 0x1C00;
GL_FEEDBACK :: 0x1C01;
GL_SELECT :: 0x1C02;
GL_FLAT :: 0x1D00;
GL_SMOOTH :: 0x1D01;
GL_S :: 0x2000;
GL_T :: 0x2001;
GL_R :: 0x2002;
GL_Q :: 0x2003;
GL_MODULATE :: 0x2100;
GL_DECAL :: 0x2101;
GL_TEXTURE_ENV_MODE :: 0x2200;
GL_TEXTURE_ENV_COLOR :: 0x2201;
GL_TEXTURE_ENV :: 0x2300;
GL_EYE_LINEAR :: 0x2400;
GL_OBJECT_LINEAR :: 0x2401;
GL_SPHERE_MAP :: 0x2402;
GL_TEXTURE_GEN_MODE :: 0x2500;
GL_OBJECT_PLANE :: 0x2501;
GL_EYE_PLANE :: 0x2502;
GL_CLAMP :: 0x2900;
GL_CLIP_PLANE0 :: 0x3000;
GL_CLIP_PLANE1 :: 0x3001;
GL_CLIP_PLANE2 :: 0x3002;
GL_CLIP_PLANE3 :: 0x3003;
GL_CLIP_PLANE4 :: 0x3004;
GL_CLIP_PLANE5 :: 0x3005;
GL_LIGHT0 :: 0x4000;
GL_LIGHT1 :: 0x4001;
GL_LIGHT2 :: 0x4002;
GL_LIGHT3 :: 0x4003;
GL_LIGHT4 :: 0x4004;
GL_LIGHT5 :: 0x4005;
GL_LIGHT6 :: 0x4006;
GL_LIGHT7 :: 0x4007;

// GL_VERSION_1_1
GL_COLOR_LOGIC_OP :: 0x0BF2;
GL_POLYGON_OFFSET_UNITS :: 0x2A00;
GL_POLYGON_OFFSET_POINT :: 0x2A01;
GL_POLYGON_OFFSET_LINE :: 0x2A02;
GL_POLYGON_OFFSET_FILL :: 0x8037;
GL_POLYGON_OFFSET_FACTOR :: 0x8038;
GL_TEXTURE_BINDING_1D :: 0x8068;
GL_TEXTURE_BINDING_2D :: 0x8069;
GL_TEXTURE_INTERNAL_FORMAT :: 0x1003;
GL_TEXTURE_RED_SIZE :: 0x805C;
GL_TEXTURE_GREEN_SIZE :: 0x805D;
GL_TEXTURE_BLUE_SIZE :: 0x805E;
GL_TEXTURE_ALPHA_SIZE :: 0x805F;
GL_DOUBLE :: 0x140A;
GL_PROXY_TEXTURE_1D :: 0x8063;
GL_PROXY_TEXTURE_2D :: 0x8064;
GL_R3_G3_B2 :: 0x2A10;
GL_RGB4 :: 0x804F;
GL_RGB5 :: 0x8050;
GL_RGB8 :: 0x8051;
GL_RGB10 :: 0x8052;
GL_RGB12 :: 0x8053;
GL_RGB16 :: 0x8054;
GL_RGBA2 :: 0x8055;
GL_RGBA4 :: 0x8056;
GL_RGB5_A1 :: 0x8057;
GL_RGBA8 :: 0x8058;
GL_RGB10_A2 :: 0x8059;
GL_RGBA12 :: 0x805A;
GL_RGBA16 :: 0x805B;
GL_CLIENT_PIXEL_STORE_BIT :: 0x00000001;
GL_CLIENT_VERTEX_ARRAY_BIT :: 0x00000002;
GL_CLIENT_ALL_ATTRIB_BITS :: 0xFFFFFFFF;
GL_VERTEX_ARRAY_POINTER :: 0x808E;
GL_NORMAL_ARRAY_POINTER :: 0x808F;
GL_COLOR_ARRAY_POINTER :: 0x8090;
GL_INDEX_ARRAY_POINTER :: 0x8091;
GL_TEXTURE_COORD_ARRAY_POINTER :: 0x8092;
GL_EDGE_FLAG_ARRAY_POINTER :: 0x8093;
GL_FEEDBACK_BUFFER_POINTER :: 0x0DF0;
GL_SELECTION_BUFFER_POINTER :: 0x0DF3;
GL_CLIENT_ATTRIB_STACK_DEPTH :: 0x0BB1;
GL_INDEX_LOGIC_OP :: 0x0BF1;
GL_MAX_CLIENT_ATTRIB_STACK_DEPTH :: 0x0D3B;
GL_FEEDBACK_BUFFER_SIZE :: 0x0DF1;
GL_FEEDBACK_BUFFER_TYPE :: 0x0DF2;
GL_SELECTION_BUFFER_SIZE :: 0x0DF4;
GL_VERTEX_ARRAY :: 0x8074;
GL_NORMAL_ARRAY :: 0x8075;
GL_COLOR_ARRAY :: 0x8076;
GL_INDEX_ARRAY :: 0x8077;
GL_TEXTURE_COORD_ARRAY :: 0x8078;
GL_EDGE_FLAG_ARRAY :: 0x8079;
GL_VERTEX_ARRAY_SIZE :: 0x807A;
GL_VERTEX_ARRAY_TYPE :: 0x807B;
GL_VERTEX_ARRAY_STRIDE :: 0x807C;
GL_NORMAL_ARRAY_TYPE :: 0x807E;
GL_NORMAL_ARRAY_STRIDE :: 0x807F;
GL_COLOR_ARRAY_SIZE :: 0x8081;
GL_COLOR_ARRAY_TYPE :: 0x8082;
GL_COLOR_ARRAY_STRIDE :: 0x8083;
GL_INDEX_ARRAY_TYPE :: 0x8085;
GL_INDEX_ARRAY_STRIDE :: 0x8086;
GL_TEXTURE_COORD_ARRAY_SIZE :: 0x8088;
GL_TEXTURE_COORD_ARRAY_TYPE :: 0x8089;
GL_TEXTURE_COORD_ARRAY_STRIDE :: 0x808A;
GL_EDGE_FLAG_ARRAY_STRIDE :: 0x808C;
GL_TEXTURE_LUMINANCE_SIZE :: 0x8060;
GL_TEXTURE_INTENSITY_SIZE :: 0x8061;
GL_TEXTURE_PRIORITY :: 0x8066;
GL_TEXTURE_RESIDENT :: 0x8067;
GL_ALPHA4 :: 0x803B;
GL_ALPHA8 :: 0x803C;
GL_ALPHA12 :: 0x803D;
GL_ALPHA16 :: 0x803E;
GL_LUMINANCE4 :: 0x803F;
GL_LUMINANCE8 :: 0x8040;
GL_LUMINANCE12 :: 0x8041;
GL_LUMINANCE16 :: 0x8042;
GL_LUMINANCE4_ALPHA4 :: 0x8043;
GL_LUMINANCE6_ALPHA2 :: 0x8044;
GL_LUMINANCE8_ALPHA8 :: 0x8045;
GL_LUMINANCE12_ALPHA4 :: 0x8046;
GL_LUMINANCE12_ALPHA12 :: 0x8047;
GL_LUMINANCE16_ALPHA16 :: 0x8048;
GL_INTENSITY :: 0x8049;
GL_INTENSITY4 :: 0x804A;
GL_INTENSITY8 :: 0x804B;
GL_INTENSITY12 :: 0x804C;
GL_INTENSITY16 :: 0x804D;
GL_V2F :: 0x2A20;
GL_V3F :: 0x2A21;
GL_C4UB_V2F :: 0x2A22;
GL_C4UB_V3F :: 0x2A23;
GL_C3F_V3F :: 0x2A24;
GL_N3F_V3F :: 0x2A25;
GL_C4F_N3F_V3F :: 0x2A26;
GL_T2F_V3F :: 0x2A27;
GL_T4F_V4F :: 0x2A28;
GL_T2F_C4UB_V3F :: 0x2A29;
GL_T2F_C3F_V3F :: 0x2A2A;
GL_T2F_N3F_V3F :: 0x2A2B;
GL_T2F_C4F_N3F_V3F :: 0x2A2C;
GL_T4F_C4F_N3F_V4F :: 0x2A2D;

// GL_VERSION_1_2
GL_UNSIGNED_BYTE_3_3_2 :: 0x8032;
GL_UNSIGNED_SHORT_4_4_4_4 :: 0x8033;
GL_UNSIGNED_SHORT_5_5_5_1 :: 0x8034;
GL_UNSIGNED_INT_8_8_8_8 :: 0x8035;
GL_UNSIGNED_INT_10_10_10_2 :: 0x8036;
GL_TEXTURE_BINDING_3D :: 0x806A;
GL_PACK_SKIP_IMAGES :: 0x806B;
GL_PACK_IMAGE_HEIGHT :: 0x806C;
GL_UNPACK_SKIP_IMAGES :: 0x806D;
GL_UNPACK_IMAGE_HEIGHT :: 0x806E;
GL_TEXTURE_3D :: 0x806F;
GL_PROXY_TEXTURE_3D :: 0x8070;
GL_TEXTURE_DEPTH :: 0x8071;
GL_TEXTURE_WRAP_R :: 0x8072;
GL_MAX_3D_TEXTURE_SIZE :: 0x8073;
GL_UNSIGNED_BYTE_2_3_3_REV :: 0x8362;
GL_UNSIGNED_SHORT_5_6_5 :: 0x8363;
GL_UNSIGNED_SHORT_5_6_5_REV :: 0x8364;
GL_UNSIGNED_SHORT_4_4_4_4_REV :: 0x8365;
GL_UNSIGNED_SHORT_1_5_5_5_REV :: 0x8366;
GL_UNSIGNED_INT_8_8_8_8_REV :: 0x8367;
GL_UNSIGNED_INT_2_10_10_10_REV :: 0x8368;
GL_BGR :: 0x80E0;
GL_BGRA :: 0x80E1;
GL_MAX_ELEMENTS_VERTICES :: 0x80E8;
GL_MAX_ELEMENTS_INDICES :: 0x80E9;
GL_CLAMP_TO_EDGE :: 0x812F;
GL_TEXTURE_MIN_LOD :: 0x813A;
GL_TEXTURE_MAX_LOD :: 0x813B;
GL_TEXTURE_BASE_LEVEL :: 0x813C;
GL_TEXTURE_MAX_LEVEL :: 0x813D;
GL_SMOOTH_POINT_SIZE_RANGE :: 0x0B12;
GL_SMOOTH_POINT_SIZE_GRANULARITY :: 0x0B13;
GL_SMOOTH_LINE_WIDTH_RANGE :: 0x0B22;
GL_SMOOTH_LINE_WIDTH_GRANULARITY :: 0x0B23;
GL_ALIASED_LINE_WIDTH_RANGE :: 0x846E;
GL_RESCALE_NORMAL :: 0x803A;
GL_LIGHT_MODEL_COLOR_CONTROL :: 0x81F8;
GL_SINGLE_COLOR :: 0x81F9;
GL_SEPARATE_SPECULAR_COLOR :: 0x81FA;
GL_ALIASED_POINT_SIZE_RANGE :: 0x846D;

// GL_VERSION_1_3
GL_TEXTURE0 :: 0x84C0;
GL_TEXTURE1 :: 0x84C1;
GL_TEXTURE2 :: 0x84C2;
GL_TEXTURE3 :: 0x84C3;
GL_TEXTURE4 :: 0x84C4;
GL_TEXTURE5 :: 0x84C5;
GL_TEXTURE6 :: 0x84C6;
GL_TEXTURE7 :: 0x84C7;
GL_TEXTURE8 :: 0x84C8;
GL_TEXTURE9 :: 0x84C9;
GL_TEXTURE10 :: 0x84CA;
GL_TEXTURE11 :: 0x84CB;
GL_TEXTURE12 :: 0x84CC;
GL_TEXTURE13 :: 0x84CD;
GL_TEXTURE14 :: 0x84CE;
GL_TEXTURE15 :: 0x84CF;
GL_TEXTURE16 :: 0x84D0;
GL_TEXTURE17 :: 0x84D1;
GL_TEXTURE18 :: 0x84D2;
GL_TEXTURE19 :: 0x84D3;
GL_TEXTURE20 :: 0x84D4;
GL_TEXTURE21 :: 0x84D5;
GL_TEXTURE22 :: 0x84D6;
GL_TEXTURE23 :: 0x84D7;
GL_TEXTURE24 :: 0x84D8;
GL_TEXTURE25 :: 0x84D9;
GL_TEXTURE26 :: 0x84DA;
GL_TEXTURE27 :: 0x84DB;
GL_TEXTURE28 :: 0x84DC;
GL_TEXTURE29 :: 0x84DD;
GL_TEXTURE30 :: 0x84DE;
GL_TEXTURE31 :: 0x84DF;
GL_ACTIVE_TEXTURE :: 0x84E0;
GL_MULTISAMPLE :: 0x809D;
GL_SAMPLE_ALPHA_TO_COVERAGE :: 0x809E;
GL_SAMPLE_ALPHA_TO_ONE :: 0x809F;
GL_SAMPLE_COVERAGE :: 0x80A0;
GL_SAMPLE_BUFFERS :: 0x80A8;
GL_SAMPLES :: 0x80A9;
GL_SAMPLE_COVERAGE_VALUE :: 0x80AA;
GL_SAMPLE_COVERAGE_INVERT :: 0x80AB;
GL_TEXTURE_CUBE_MAP :: 0x8513;
GL_TEXTURE_BINDING_CUBE_MAP :: 0x8514;
GL_TEXTURE_CUBE_MAP_POSITIVE_X :: 0x8515;
GL_TEXTURE_CUBE_MAP_NEGATIVE_X :: 0x8516;
GL_TEXTURE_CUBE_MAP_POSITIVE_Y :: 0x8517;
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y :: 0x8518;
GL_TEXTURE_CUBE_MAP_POSITIVE_Z :: 0x8519;
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z :: 0x851A;
GL_PROXY_TEXTURE_CUBE_MAP :: 0x851B;
GL_MAX_CUBE_MAP_TEXTURE_SIZE :: 0x851C;
GL_COMPRESSED_RGB :: 0x84ED;
GL_COMPRESSED_RGBA :: 0x84EE;
GL_TEXTURE_COMPRESSION_HINT :: 0x84EF;
GL_TEXTURE_COMPRESSED_IMAGE_SIZE :: 0x86A0;
GL_TEXTURE_COMPRESSED :: 0x86A1;
GL_NUM_COMPRESSED_TEXTURE_FORMATS :: 0x86A2;
GL_COMPRESSED_TEXTURE_FORMATS :: 0x86A3;
GL_CLAMP_TO_BORDER :: 0x812D;
GL_CLIENT_ACTIVE_TEXTURE :: 0x84E1;
GL_MAX_TEXTURE_UNITS :: 0x84E2;
GL_TRANSPOSE_MODELVIEW_MATRIX :: 0x84E3;
GL_TRANSPOSE_PROJECTION_MATRIX :: 0x84E4;
GL_TRANSPOSE_TEXTURE_MATRIX :: 0x84E5;
GL_TRANSPOSE_COLOR_MATRIX :: 0x84E6;
GL_MULTISAMPLE_BIT :: 0x20000000;
GL_NORMAL_MAP :: 0x8511;
GL_REFLECTION_MAP :: 0x8512;
GL_COMPRESSED_ALPHA :: 0x84E9;
GL_COMPRESSED_LUMINANCE :: 0x84EA;
GL_COMPRESSED_LUMINANCE_ALPHA :: 0x84EB;
GL_COMPRESSED_INTENSITY :: 0x84EC;
GL_COMBINE :: 0x8570;
GL_COMBINE_RGB :: 0x8571;
GL_COMBINE_ALPHA :: 0x8572;
GL_SOURCE0_RGB :: 0x8580;
GL_SOURCE1_RGB :: 0x8581;
GL_SOURCE2_RGB :: 0x8582;
GL_SOURCE0_ALPHA :: 0x8588;
GL_SOURCE1_ALPHA :: 0x8589;
GL_SOURCE2_ALPHA :: 0x858A;
GL_OPERAND0_RGB :: 0x8590;
GL_OPERAND1_RGB :: 0x8591;
GL_OPERAND2_RGB :: 0x8592;
GL_OPERAND0_ALPHA :: 0x8598;
GL_OPERAND1_ALPHA :: 0x8599;
GL_OPERAND2_ALPHA :: 0x859A;
GL_RGB_SCALE :: 0x8573;
GL_ADD_SIGNED :: 0x8574;
GL_INTERPOLATE :: 0x8575;
GL_SUBTRACT :: 0x84E7;
GL_CONSTANT :: 0x8576;
GL_PRIMARY_COLOR :: 0x8577;
GL_PREVIOUS :: 0x8578;
GL_DOT3_RGB :: 0x86AE;
GL_DOT3_RGBA :: 0x86AF;

// GL_VERSION_1_4
GL_BLEND_DST_RGB :: 0x80C8;
GL_BLEND_SRC_RGB :: 0x80C9;
GL_BLEND_DST_ALPHA :: 0x80CA;
GL_BLEND_SRC_ALPHA :: 0x80CB;
GL_POINT_FADE_THRESHOLD_SIZE :: 0x8128;
GL_DEPTH_COMPONENT16 :: 0x81A5;
GL_DEPTH_COMPONENT24 :: 0x81A6;
GL_DEPTH_COMPONENT32 :: 0x81A7;
GL_MIRRORED_REPEAT :: 0x8370;
GL_MAX_TEXTURE_LOD_BIAS :: 0x84FD;
GL_TEXTURE_LOD_BIAS :: 0x8501;
GL_INCR_WRAP :: 0x8507;
GL_DECR_WRAP :: 0x8508;
GL_TEXTURE_DEPTH_SIZE :: 0x884A;
GL_TEXTURE_COMPARE_MODE :: 0x884C;
GL_TEXTURE_COMPARE_FUNC :: 0x884D;
GL_POINT_SIZE_MIN :: 0x8126;
GL_POINT_SIZE_MAX :: 0x8127;
GL_POINT_DISTANCE_ATTENUATION :: 0x8129;
GL_GENERATE_MIPMAP :: 0x8191;
GL_GENERATE_MIPMAP_HINT :: 0x8192;
GL_FOG_COORDINATE_SOURCE :: 0x8450;
GL_FOG_COORDINATE :: 0x8451;
GL_FRAGMENT_DEPTH :: 0x8452;
GL_CURRENT_FOG_COORDINATE :: 0x8453;
GL_FOG_COORDINATE_ARRAY_TYPE :: 0x8454;
GL_FOG_COORDINATE_ARRAY_STRIDE :: 0x8455;
GL_FOG_COORDINATE_ARRAY_POINTER :: 0x8456;
GL_FOG_COORDINATE_ARRAY :: 0x8457;
GL_COLOR_SUM :: 0x8458;
GL_CURRENT_SECONDARY_COLOR :: 0x8459;
GL_SECONDARY_COLOR_ARRAY_SIZE :: 0x845A;
GL_SECONDARY_COLOR_ARRAY_TYPE :: 0x845B;
GL_SECONDARY_COLOR_ARRAY_STRIDE :: 0x845C;
GL_SECONDARY_COLOR_ARRAY_POINTER :: 0x845D;
GL_SECONDARY_COLOR_ARRAY :: 0x845E;
GL_TEXTURE_FILTER_CONTROL :: 0x8500;
GL_DEPTH_TEXTURE_MODE :: 0x884B;
GL_COMPARE_R_TO_TEXTURE :: 0x884E;
GL_BLEND_COLOR :: 0x8005;
GL_BLEND_EQUATION :: 0x8009;
GL_CONSTANT_COLOR :: 0x8001;
GL_ONE_MINUS_CONSTANT_COLOR :: 0x8002;
GL_CONSTANT_ALPHA :: 0x8003;
GL_ONE_MINUS_CONSTANT_ALPHA :: 0x8004;
GL_FUNC_ADD :: 0x8006;
GL_FUNC_REVERSE_SUBTRACT :: 0x800B;
GL_FUNC_SUBTRACT :: 0x800A;
GL_MIN :: 0x8007;
GL_MAX :: 0x8008;

// GL_VERSION_1_5
GL_BUFFER_SIZE :: 0x8764;
GL_BUFFER_USAGE :: 0x8765;
GL_QUERY_COUNTER_BITS :: 0x8864;
GL_CURRENT_QUERY :: 0x8865;
GL_QUERY_RESULT :: 0x8866;
GL_QUERY_RESULT_AVAILABLE :: 0x8867;
GL_ARRAY_BUFFER :: 0x8892;
GL_ELEMENT_ARRAY_BUFFER :: 0x8893;
GL_ARRAY_BUFFER_BINDING :: 0x8894;
GL_ELEMENT_ARRAY_BUFFER_BINDING :: 0x8895;
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING :: 0x889F;
GL_READ_ONLY :: 0x88B8;
GL_WRITE_ONLY :: 0x88B9;
GL_READ_WRITE :: 0x88BA;
GL_BUFFER_ACCESS :: 0x88BB;
GL_BUFFER_MAPPED :: 0x88BC;
GL_BUFFER_MAP_POINTER :: 0x88BD;
GL_STREAM_DRAW :: 0x88E0;
GL_STREAM_READ :: 0x88E1;
GL_STREAM_COPY :: 0x88E2;
GL_STATIC_DRAW :: 0x88E4;
GL_STATIC_READ :: 0x88E5;
GL_STATIC_COPY :: 0x88E6;
GL_DYNAMIC_DRAW :: 0x88E8;
GL_DYNAMIC_READ :: 0x88E9;
GL_DYNAMIC_COPY :: 0x88EA;
GL_SAMPLES_PASSED :: 0x8914;
GL_SRC1_ALPHA :: 0x8589;
GL_VERTEX_ARRAY_BUFFER_BINDING :: 0x8896;
GL_NORMAL_ARRAY_BUFFER_BINDING :: 0x8897;
GL_COLOR_ARRAY_BUFFER_BINDING :: 0x8898;
GL_INDEX_ARRAY_BUFFER_BINDING :: 0x8899;
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING :: 0x889A;
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING :: 0x889B;
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING :: 0x889C;
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING :: 0x889D;
GL_WEIGHT_ARRAY_BUFFER_BINDING :: 0x889E;
GL_FOG_COORD_SRC :: 0x8450;
GL_FOG_COORD :: 0x8451;
GL_CURRENT_FOG_COORD :: 0x8453;
GL_FOG_COORD_ARRAY_TYPE :: 0x8454;
GL_FOG_COORD_ARRAY_STRIDE :: 0x8455;
GL_FOG_COORD_ARRAY_POINTER :: 0x8456;
GL_FOG_COORD_ARRAY :: 0x8457;
GL_FOG_COORD_ARRAY_BUFFER_BINDING :: 0x889D;
GL_SRC0_RGB :: 0x8580;
GL_SRC1_RGB :: 0x8581;
GL_SRC2_RGB :: 0x8582;
GL_SRC0_ALPHA :: 0x8588;
GL_SRC2_ALPHA :: 0x858A;

// GL_VERSION_2_0
GL_BLEND_EQUATION_RGB :: 0x8009;
GL_VERTEX_ATTRIB_ARRAY_ENABLED :: 0x8622;
GL_VERTEX_ATTRIB_ARRAY_SIZE :: 0x8623;
GL_VERTEX_ATTRIB_ARRAY_STRIDE :: 0x8624;
GL_VERTEX_ATTRIB_ARRAY_TYPE :: 0x8625;
GL_CURRENT_VERTEX_ATTRIB :: 0x8626;
GL_VERTEX_PROGRAM_POINT_SIZE :: 0x8642;
GL_VERTEX_ATTRIB_ARRAY_POINTER :: 0x8645;
GL_STENCIL_BACK_FUNC :: 0x8800;
GL_STENCIL_BACK_FAIL :: 0x8801;
GL_STENCIL_BACK_PASS_DEPTH_FAIL :: 0x8802;
GL_STENCIL_BACK_PASS_DEPTH_PASS :: 0x8803;
GL_MAX_DRAW_BUFFERS :: 0x8824;
GL_DRAW_BUFFER0 :: 0x8825;
GL_DRAW_BUFFER1 :: 0x8826;
GL_DRAW_BUFFER2 :: 0x8827;
GL_DRAW_BUFFER3 :: 0x8828;
GL_DRAW_BUFFER4 :: 0x8829;
GL_DRAW_BUFFER5 :: 0x882A;
GL_DRAW_BUFFER6 :: 0x882B;
GL_DRAW_BUFFER7 :: 0x882C;
GL_DRAW_BUFFER8 :: 0x882D;
GL_DRAW_BUFFER9 :: 0x882E;
GL_DRAW_BUFFER10 :: 0x882F;
GL_DRAW_BUFFER11 :: 0x8830;
GL_DRAW_BUFFER12 :: 0x8831;
GL_DRAW_BUFFER13 :: 0x8832;
GL_DRAW_BUFFER14 :: 0x8833;
GL_DRAW_BUFFER15 :: 0x8834;
GL_BLEND_EQUATION_ALPHA :: 0x883D;
GL_MAX_VERTEX_ATTRIBS :: 0x8869;
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED :: 0x886A;
GL_MAX_TEXTURE_IMAGE_UNITS :: 0x8872;
GL_FRAGMENT_SHADER :: 0x8B30;
GL_VERTEX_SHADER :: 0x8B31;
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS :: 0x8B49;
GL_MAX_VERTEX_UNIFORM_COMPONENTS :: 0x8B4A;
GL_MAX_VARYING_FLOATS :: 0x8B4B;
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS :: 0x8B4C;
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS :: 0x8B4D;
GL_SHADER_TYPE :: 0x8B4F;
GL_FLOAT_VEC2 :: 0x8B50;
GL_FLOAT_VEC3 :: 0x8B51;
GL_FLOAT_VEC4 :: 0x8B52;
GL_INT_VEC2 :: 0x8B53;
GL_INT_VEC3 :: 0x8B54;
GL_INT_VEC4 :: 0x8B55;
GL_BOOL :: 0x8B56;
GL_BOOL_VEC2 :: 0x8B57;
GL_BOOL_VEC3 :: 0x8B58;
GL_BOOL_VEC4 :: 0x8B59;
GL_FLOAT_MAT2 :: 0x8B5A;
GL_FLOAT_MAT3 :: 0x8B5B;
GL_FLOAT_MAT4 :: 0x8B5C;
GL_SAMPLER_1D :: 0x8B5D;
GL_SAMPLER_2D :: 0x8B5E;
GL_SAMPLER_3D :: 0x8B5F;
GL_SAMPLER_CUBE :: 0x8B60;
GL_SAMPLER_1D_SHADOW :: 0x8B61;
GL_SAMPLER_2D_SHADOW :: 0x8B62;
GL_DELETE_STATUS :: 0x8B80;
GL_COMPILE_STATUS :: 0x8B81;
GL_LINK_STATUS :: 0x8B82;
GL_VALIDATE_STATUS :: 0x8B83;
GL_INFO_LOG_LENGTH :: 0x8B84;
GL_ATTACHED_SHADERS :: 0x8B85;
GL_ACTIVE_UNIFORMS :: 0x8B86;
GL_ACTIVE_UNIFORM_MAX_LENGTH :: 0x8B87;
GL_SHADER_SOURCE_LENGTH :: 0x8B88;
GL_ACTIVE_ATTRIBUTES :: 0x8B89;
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH :: 0x8B8A;
GL_FRAGMENT_SHADER_DERIVATIVE_HINT :: 0x8B8B;
GL_SHADING_LANGUAGE_VERSION :: 0x8B8C;
GL_CURRENT_PROGRAM :: 0x8B8D;
GL_POINT_SPRITE_COORD_ORIGIN :: 0x8CA0;
GL_LOWER_LEFT :: 0x8CA1;
GL_UPPER_LEFT :: 0x8CA2;
GL_STENCIL_BACK_REF :: 0x8CA3;
GL_STENCIL_BACK_VALUE_MASK :: 0x8CA4;
GL_STENCIL_BACK_WRITEMASK :: 0x8CA5;
GL_VERTEX_PROGRAM_TWO_SIDE :: 0x8643;
GL_POINT_SPRITE :: 0x8861;
GL_COORD_REPLACE :: 0x8862;
GL_MAX_TEXTURE_COORDS :: 0x8871;

// GL_VERSION_2_1
GL_PIXEL_PACK_BUFFER :: 0x88EB;
GL_PIXEL_UNPACK_BUFFER :: 0x88EC;
GL_PIXEL_PACK_BUFFER_BINDING :: 0x88ED;
GL_PIXEL_UNPACK_BUFFER_BINDING :: 0x88EF;
GL_FLOAT_MAT2x3 :: 0x8B65;
GL_FLOAT_MAT2x4 :: 0x8B66;
GL_FLOAT_MAT3x2 :: 0x8B67;
GL_FLOAT_MAT3x4 :: 0x8B68;
GL_FLOAT_MAT4x2 :: 0x8B69;
GL_FLOAT_MAT4x3 :: 0x8B6A;
GL_SRGB :: 0x8C40;
GL_SRGB8 :: 0x8C41;
GL_SRGB_ALPHA :: 0x8C42;
GL_SRGB8_ALPHA8 :: 0x8C43;
GL_COMPRESSED_SRGB :: 0x8C48;
GL_COMPRESSED_SRGB_ALPHA :: 0x8C49;
GL_CURRENT_RASTER_SECONDARY_COLOR :: 0x845F;
GL_SLUMINANCE_ALPHA :: 0x8C44;
GL_SLUMINANCE8_ALPHA8 :: 0x8C45;
GL_SLUMINANCE :: 0x8C46;
GL_SLUMINANCE8 :: 0x8C47;
GL_COMPRESSED_SLUMINANCE :: 0x8C4A;
GL_COMPRESSED_SLUMINANCE_ALPHA :: 0x8C4B;

// GL_VERSION_3_0
GL_COMPARE_REF_TO_TEXTURE :: 0x884E;
GL_CLIP_DISTANCE0 :: 0x3000;
GL_CLIP_DISTANCE1 :: 0x3001;
GL_CLIP_DISTANCE2 :: 0x3002;
GL_CLIP_DISTANCE3 :: 0x3003;
GL_CLIP_DISTANCE4 :: 0x3004;
GL_CLIP_DISTANCE5 :: 0x3005;
GL_CLIP_DISTANCE6 :: 0x3006;
GL_CLIP_DISTANCE7 :: 0x3007;
GL_MAX_CLIP_DISTANCES :: 0x0D32;
GL_MAJOR_VERSION :: 0x821B;
GL_MINOR_VERSION :: 0x821C;
GL_NUM_EXTENSIONS :: 0x821D;
GL_CONTEXT_FLAGS :: 0x821E;
GL_COMPRESSED_RED :: 0x8225;
GL_COMPRESSED_RG :: 0x8226;
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT :: 0x00000001;
GL_RGBA32F :: 0x8814;
GL_RGB32F :: 0x8815;
GL_RGBA16F :: 0x881A;
GL_RGB16F :: 0x881B;
GL_VERTEX_ATTRIB_ARRAY_INTEGER :: 0x88FD;
GL_MAX_ARRAY_TEXTURE_LAYERS :: 0x88FF;
GL_MIN_PROGRAM_TEXEL_OFFSET :: 0x8904;
GL_MAX_PROGRAM_TEXEL_OFFSET :: 0x8905;
GL_CLAMP_READ_COLOR :: 0x891C;
GL_FIXED_ONLY :: 0x891D;
GL_MAX_VARYING_COMPONENTS :: 0x8B4B;
GL_TEXTURE_1D_ARRAY :: 0x8C18;
GL_PROXY_TEXTURE_1D_ARRAY :: 0x8C19;
GL_TEXTURE_2D_ARRAY :: 0x8C1A;
GL_PROXY_TEXTURE_2D_ARRAY :: 0x8C1B;
GL_TEXTURE_BINDING_1D_ARRAY :: 0x8C1C;
GL_TEXTURE_BINDING_2D_ARRAY :: 0x8C1D;
GL_R11F_G11F_B10F :: 0x8C3A;
GL_UNSIGNED_INT_10F_11F_11F_REV :: 0x8C3B;
GL_RGB9_E5 :: 0x8C3D;
GL_UNSIGNED_INT_5_9_9_9_REV :: 0x8C3E;
GL_TEXTURE_SHARED_SIZE :: 0x8C3F;
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH :: 0x8C76;
GL_TRANSFORM_FEEDBACK_BUFFER_MODE :: 0x8C7F;
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS :: 0x8C80;
GL_TRANSFORM_FEEDBACK_VARYINGS :: 0x8C83;
GL_TRANSFORM_FEEDBACK_BUFFER_START :: 0x8C84;
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE :: 0x8C85;
GL_PRIMITIVES_GENERATED :: 0x8C87;
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN :: 0x8C88;
GL_RASTERIZER_DISCARD :: 0x8C89;
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS :: 0x8C8A;
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS :: 0x8C8B;
GL_INTERLEAVED_ATTRIBS :: 0x8C8C;
GL_SEPARATE_ATTRIBS :: 0x8C8D;
GL_TRANSFORM_FEEDBACK_BUFFER :: 0x8C8E;
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING :: 0x8C8F;
GL_RGBA32UI :: 0x8D70;
GL_RGB32UI :: 0x8D71;
GL_RGBA16UI :: 0x8D76;
GL_RGB16UI :: 0x8D77;
GL_RGBA8UI :: 0x8D7C;
GL_RGB8UI :: 0x8D7D;
GL_RGBA32I :: 0x8D82;
GL_RGB32I :: 0x8D83;
GL_RGBA16I :: 0x8D88;
GL_RGB16I :: 0x8D89;
GL_RGBA8I :: 0x8D8E;
GL_RGB8I :: 0x8D8F;
GL_RED_INTEGER :: 0x8D94;
GL_GREEN_INTEGER :: 0x8D95;
GL_BLUE_INTEGER :: 0x8D96;
GL_RGB_INTEGER :: 0x8D98;
GL_RGBA_INTEGER :: 0x8D99;
GL_BGR_INTEGER :: 0x8D9A;
GL_BGRA_INTEGER :: 0x8D9B;
GL_SAMPLER_1D_ARRAY :: 0x8DC0;
GL_SAMPLER_2D_ARRAY :: 0x8DC1;
GL_SAMPLER_1D_ARRAY_SHADOW :: 0x8DC3;
GL_SAMPLER_2D_ARRAY_SHADOW :: 0x8DC4;
GL_SAMPLER_CUBE_SHADOW :: 0x8DC5;
GL_UNSIGNED_INT_VEC2 :: 0x8DC6;
GL_UNSIGNED_INT_VEC3 :: 0x8DC7;
GL_UNSIGNED_INT_VEC4 :: 0x8DC8;
GL_INT_SAMPLER_1D :: 0x8DC9;
GL_INT_SAMPLER_2D :: 0x8DCA;
GL_INT_SAMPLER_3D :: 0x8DCB;
GL_INT_SAMPLER_CUBE :: 0x8DCC;
GL_INT_SAMPLER_1D_ARRAY :: 0x8DCE;
GL_INT_SAMPLER_2D_ARRAY :: 0x8DCF;
GL_UNSIGNED_INT_SAMPLER_1D :: 0x8DD1;
GL_UNSIGNED_INT_SAMPLER_2D :: 0x8DD2;
GL_UNSIGNED_INT_SAMPLER_3D :: 0x8DD3;
GL_UNSIGNED_INT_SAMPLER_CUBE :: 0x8DD4;
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY :: 0x8DD6;
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY :: 0x8DD7;
GL_QUERY_WAIT :: 0x8E13;
GL_QUERY_NO_WAIT :: 0x8E14;
GL_QUERY_BY_REGION_WAIT :: 0x8E15;
GL_QUERY_BY_REGION_NO_WAIT :: 0x8E16;
GL_BUFFER_ACCESS_FLAGS :: 0x911F;
GL_BUFFER_MAP_LENGTH :: 0x9120;
GL_BUFFER_MAP_OFFSET :: 0x9121;
GL_DEPTH_COMPONENT32F :: 0x8CAC;
GL_DEPTH32F_STENCIL8 :: 0x8CAD;
GL_FLOAT_32_UNSIGNED_INT_24_8_REV :: 0x8DAD;
GL_INVALID_FRAMEBUFFER_OPERATION :: 0x0506;
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING :: 0x8210;
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE :: 0x8211;
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE :: 0x8212;
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE :: 0x8213;
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE :: 0x8214;
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE :: 0x8215;
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE :: 0x8216;
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE :: 0x8217;
GL_FRAMEBUFFER_DEFAULT :: 0x8218;
GL_FRAMEBUFFER_UNDEFINED :: 0x8219;
GL_DEPTH_STENCIL_ATTACHMENT :: 0x821A;
GL_MAX_RENDERBUFFER_SIZE :: 0x84E8;
GL_DEPTH_STENCIL :: 0x84F9;
GL_UNSIGNED_INT_24_8 :: 0x84FA;
GL_DEPTH24_STENCIL8 :: 0x88F0;
GL_TEXTURE_STENCIL_SIZE :: 0x88F1;
GL_TEXTURE_RED_TYPE :: 0x8C10;
GL_TEXTURE_GREEN_TYPE :: 0x8C11;
GL_TEXTURE_BLUE_TYPE :: 0x8C12;
GL_TEXTURE_ALPHA_TYPE :: 0x8C13;
GL_TEXTURE_DEPTH_TYPE :: 0x8C16;
GL_UNSIGNED_NORMALIZED :: 0x8C17;
GL_FRAMEBUFFER_BINDING :: 0x8CA6;
GL_DRAW_FRAMEBUFFER_BINDING :: 0x8CA6;
GL_RENDERBUFFER_BINDING :: 0x8CA7;
GL_READ_FRAMEBUFFER :: 0x8CA8;
GL_DRAW_FRAMEBUFFER :: 0x8CA9;
GL_READ_FRAMEBUFFER_BINDING :: 0x8CAA;
GL_RENDERBUFFER_SAMPLES :: 0x8CAB;
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE :: 0x8CD0;
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME :: 0x8CD1;
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL :: 0x8CD2;
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE :: 0x8CD3;
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER :: 0x8CD4;
GL_FRAMEBUFFER_COMPLETE :: 0x8CD5;
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT :: 0x8CD6;
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT :: 0x8CD7;
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER :: 0x8CDB;
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER :: 0x8CDC;
GL_FRAMEBUFFER_UNSUPPORTED :: 0x8CDD;
GL_MAX_COLOR_ATTACHMENTS :: 0x8CDF;
GL_COLOR_ATTACHMENT0 :: 0x8CE0;
GL_COLOR_ATTACHMENT1 :: 0x8CE1;
GL_COLOR_ATTACHMENT2 :: 0x8CE2;
GL_COLOR_ATTACHMENT3 :: 0x8CE3;
GL_COLOR_ATTACHMENT4 :: 0x8CE4;
GL_COLOR_ATTACHMENT5 :: 0x8CE5;
GL_COLOR_ATTACHMENT6 :: 0x8CE6;
GL_COLOR_ATTACHMENT7 :: 0x8CE7;
GL_COLOR_ATTACHMENT8 :: 0x8CE8;
GL_COLOR_ATTACHMENT9 :: 0x8CE9;
GL_COLOR_ATTACHMENT10 :: 0x8CEA;
GL_COLOR_ATTACHMENT11 :: 0x8CEB;
GL_COLOR_ATTACHMENT12 :: 0x8CEC;
GL_COLOR_ATTACHMENT13 :: 0x8CED;
GL_COLOR_ATTACHMENT14 :: 0x8CEE;
GL_COLOR_ATTACHMENT15 :: 0x8CEF;
GL_COLOR_ATTACHMENT16 :: 0x8CF0;
GL_COLOR_ATTACHMENT17 :: 0x8CF1;
GL_COLOR_ATTACHMENT18 :: 0x8CF2;
GL_COLOR_ATTACHMENT19 :: 0x8CF3;
GL_COLOR_ATTACHMENT20 :: 0x8CF4;
GL_COLOR_ATTACHMENT21 :: 0x8CF5;
GL_COLOR_ATTACHMENT22 :: 0x8CF6;
GL_COLOR_ATTACHMENT23 :: 0x8CF7;
GL_COLOR_ATTACHMENT24 :: 0x8CF8;
GL_COLOR_ATTACHMENT25 :: 0x8CF9;
GL_COLOR_ATTACHMENT26 :: 0x8CFA;
GL_COLOR_ATTACHMENT27 :: 0x8CFB;
GL_COLOR_ATTACHMENT28 :: 0x8CFC;
GL_COLOR_ATTACHMENT29 :: 0x8CFD;
GL_COLOR_ATTACHMENT30 :: 0x8CFE;
GL_COLOR_ATTACHMENT31 :: 0x8CFF;
GL_DEPTH_ATTACHMENT :: 0x8D00;
GL_STENCIL_ATTACHMENT :: 0x8D20;
GL_FRAMEBUFFER :: 0x8D40;
GL_RENDERBUFFER :: 0x8D41;
GL_RENDERBUFFER_WIDTH :: 0x8D42;
GL_RENDERBUFFER_HEIGHT :: 0x8D43;
GL_RENDERBUFFER_INTERNAL_FORMAT :: 0x8D44;
GL_STENCIL_INDEX1 :: 0x8D46;
GL_STENCIL_INDEX4 :: 0x8D47;
GL_STENCIL_INDEX8 :: 0x8D48;
GL_STENCIL_INDEX16 :: 0x8D49;
GL_RENDERBUFFER_RED_SIZE :: 0x8D50;
GL_RENDERBUFFER_GREEN_SIZE :: 0x8D51;
GL_RENDERBUFFER_BLUE_SIZE :: 0x8D52;
GL_RENDERBUFFER_ALPHA_SIZE :: 0x8D53;
GL_RENDERBUFFER_DEPTH_SIZE :: 0x8D54;
GL_RENDERBUFFER_STENCIL_SIZE :: 0x8D55;
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE :: 0x8D56;
GL_MAX_SAMPLES :: 0x8D57;
GL_INDEX :: 0x8222;
GL_TEXTURE_LUMINANCE_TYPE :: 0x8C14;
GL_TEXTURE_INTENSITY_TYPE :: 0x8C15;
GL_FRAMEBUFFER_SRGB :: 0x8DB9;
GL_HALF_FLOAT :: 0x140B;
GL_MAP_READ_BIT :: 0x0001;
GL_MAP_WRITE_BIT :: 0x0002;
GL_MAP_INVALIDATE_RANGE_BIT :: 0x0004;
GL_MAP_INVALIDATE_BUFFER_BIT :: 0x0008;
GL_MAP_FLUSH_EXPLICIT_BIT :: 0x0010;
GL_MAP_UNSYNCHRONIZED_BIT :: 0x0020;
GL_COMPRESSED_RED_RGTC1 :: 0x8DBB;
GL_COMPRESSED_SIGNED_RED_RGTC1 :: 0x8DBC;
GL_COMPRESSED_RG_RGTC2 :: 0x8DBD;
GL_COMPRESSED_SIGNED_RG_RGTC2 :: 0x8DBE;
GL_RG :: 0x8227;
GL_RG_INTEGER :: 0x8228;
GL_R8 :: 0x8229;
GL_R16 :: 0x822A;
GL_RG8 :: 0x822B;
GL_RG16 :: 0x822C;
GL_R16F :: 0x822D;
GL_R32F :: 0x822E;
GL_RG16F :: 0x822F;
GL_RG32F :: 0x8230;
GL_R8I :: 0x8231;
GL_R8UI :: 0x8232;
GL_R16I :: 0x8233;
GL_R16UI :: 0x8234;
GL_R32I :: 0x8235;
GL_R32UI :: 0x8236;
GL_RG8I :: 0x8237;
GL_RG8UI :: 0x8238;
GL_RG16I :: 0x8239;
GL_RG16UI :: 0x823A;
GL_RG32I :: 0x823B;
GL_RG32UI :: 0x823C;
GL_VERTEX_ARRAY_BINDING :: 0x85B5;
GL_CLAMP_VERTEX_COLOR :: 0x891A;
GL_CLAMP_FRAGMENT_COLOR :: 0x891B;
GL_ALPHA_INTEGER :: 0x8D97;

// GL_VERSION_3_1
GL_SAMPLER_2D_RECT :: 0x8B63;
GL_SAMPLER_2D_RECT_SHADOW :: 0x8B64;
GL_SAMPLER_BUFFER :: 0x8DC2;
GL_INT_SAMPLER_2D_RECT :: 0x8DCD;
GL_INT_SAMPLER_BUFFER :: 0x8DD0;
GL_UNSIGNED_INT_SAMPLER_2D_RECT :: 0x8DD5;
GL_UNSIGNED_INT_SAMPLER_BUFFER :: 0x8DD8;
GL_TEXTURE_BUFFER :: 0x8C2A;
GL_MAX_TEXTURE_BUFFER_SIZE :: 0x8C2B;
GL_TEXTURE_BINDING_BUFFER :: 0x8C2C;
GL_TEXTURE_BUFFER_DATA_STORE_BINDING :: 0x8C2D;
GL_TEXTURE_RECTANGLE :: 0x84F5;
GL_TEXTURE_BINDING_RECTANGLE :: 0x84F6;
GL_PROXY_TEXTURE_RECTANGLE :: 0x84F7;
GL_MAX_RECTANGLE_TEXTURE_SIZE :: 0x84F8;
GL_R8_SNORM :: 0x8F94;
GL_RG8_SNORM :: 0x8F95;
GL_RGB8_SNORM :: 0x8F96;
GL_RGBA8_SNORM :: 0x8F97;
GL_R16_SNORM :: 0x8F98;
GL_RG16_SNORM :: 0x8F99;
GL_RGB16_SNORM :: 0x8F9A;
GL_RGBA16_SNORM :: 0x8F9B;
GL_SIGNED_NORMALIZED :: 0x8F9C;
GL_PRIMITIVE_RESTART :: 0x8F9D;
GL_PRIMITIVE_RESTART_INDEX :: 0x8F9E;
GL_COPY_READ_BUFFER :: 0x8F36;
GL_COPY_WRITE_BUFFER :: 0x8F37;
GL_UNIFORM_BUFFER :: 0x8A11;
GL_UNIFORM_BUFFER_BINDING :: 0x8A28;
GL_UNIFORM_BUFFER_START :: 0x8A29;
GL_UNIFORM_BUFFER_SIZE :: 0x8A2A;
GL_MAX_VERTEX_UNIFORM_BLOCKS :: 0x8A2B;
GL_MAX_GEOMETRY_UNIFORM_BLOCKS :: 0x8A2C;
GL_MAX_FRAGMENT_UNIFORM_BLOCKS :: 0x8A2D;
GL_MAX_COMBINED_UNIFORM_BLOCKS :: 0x8A2E;
GL_MAX_UNIFORM_BUFFER_BINDINGS :: 0x8A2F;
GL_MAX_UNIFORM_BLOCK_SIZE :: 0x8A30;
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS :: 0x8A31;
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS :: 0x8A32;
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS :: 0x8A33;
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT :: 0x8A34;
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH :: 0x8A35;
GL_ACTIVE_UNIFORM_BLOCKS :: 0x8A36;
GL_UNIFORM_TYPE :: 0x8A37;
GL_UNIFORM_SIZE :: 0x8A38;
GL_UNIFORM_NAME_LENGTH :: 0x8A39;
GL_UNIFORM_BLOCK_INDEX :: 0x8A3A;
GL_UNIFORM_OFFSET :: 0x8A3B;
GL_UNIFORM_ARRAY_STRIDE :: 0x8A3C;
GL_UNIFORM_MATRIX_STRIDE :: 0x8A3D;
GL_UNIFORM_IS_ROW_MAJOR :: 0x8A3E;
GL_UNIFORM_BLOCK_BINDING :: 0x8A3F;
GL_UNIFORM_BLOCK_DATA_SIZE :: 0x8A40;
GL_UNIFORM_BLOCK_NAME_LENGTH :: 0x8A41;
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS :: 0x8A42;
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES :: 0x8A43;
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER :: 0x8A44;
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER :: 0x8A45;
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER :: 0x8A46;
GL_INVALID_INDEX :: 0xFFFFFFFF;  // Tagged as uint

// GL_VERSION_3_2
GL_CONTEXT_CORE_PROFILE_BIT :: 0x00000001;
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT :: 0x00000002;
GL_LINES_ADJACENCY :: 0x000A;
GL_LINE_STRIP_ADJACENCY :: 0x000B;
GL_TRIANGLES_ADJACENCY :: 0x000C;
GL_TRIANGLE_STRIP_ADJACENCY :: 0x000D;
GL_PROGRAM_POINT_SIZE :: 0x8642;
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS :: 0x8C29;
GL_FRAMEBUFFER_ATTACHMENT_LAYERED :: 0x8DA7;
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS :: 0x8DA8;
GL_GEOMETRY_SHADER :: 0x8DD9;
GL_GEOMETRY_VERTICES_OUT :: 0x8916;
GL_GEOMETRY_INPUT_TYPE :: 0x8917;
GL_GEOMETRY_OUTPUT_TYPE :: 0x8918;
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS :: 0x8DDF;
GL_MAX_GEOMETRY_OUTPUT_VERTICES :: 0x8DE0;
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS :: 0x8DE1;
GL_MAX_VERTEX_OUTPUT_COMPONENTS :: 0x9122;
GL_MAX_GEOMETRY_INPUT_COMPONENTS :: 0x9123;
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS :: 0x9124;
GL_MAX_FRAGMENT_INPUT_COMPONENTS :: 0x9125;
GL_CONTEXT_PROFILE_MASK :: 0x9126;
GL_DEPTH_CLAMP :: 0x864F;
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION :: 0x8E4C;
GL_FIRST_VERTEX_CONVENTION :: 0x8E4D;
GL_LAST_VERTEX_CONVENTION :: 0x8E4E;
GL_PROVOKING_VERTEX :: 0x8E4F;
GL_TEXTURE_CUBE_MAP_SEAMLESS :: 0x884F;
GL_MAX_SERVER_WAIT_TIMEOUT :: 0x9111;
GL_OBJECT_TYPE :: 0x9112;
GL_SYNC_CONDITION :: 0x9113;
GL_SYNC_STATUS :: 0x9114;
GL_SYNC_FLAGS :: 0x9115;
GL_SYNC_FENCE :: 0x9116;
GL_SYNC_GPU_COMMANDS_COMPLETE :: 0x9117;
GL_UNSIGNALED :: 0x9118;
GL_SIGNALED :: 0x9119;
GL_ALREADY_SIGNALED :: 0x911A;
GL_TIMEOUT_EXPIRED :: 0x911B;
GL_CONDITION_SATISFIED :: 0x911C;
GL_WAIT_FAILED :: 0x911D;
GL_TIMEOUT_IGNORED :: 0xFFFFFFFFFFFFFFFF;  // Tagged as uint64
GL_SYNC_FLUSH_COMMANDS_BIT :: 0x00000001;
GL_SAMPLE_POSITION :: 0x8E50;
GL_SAMPLE_MASK :: 0x8E51;
GL_SAMPLE_MASK_VALUE :: 0x8E52;
GL_MAX_SAMPLE_MASK_WORDS :: 0x8E59;
GL_TEXTURE_2D_MULTISAMPLE :: 0x9100;
GL_PROXY_TEXTURE_2D_MULTISAMPLE :: 0x9101;
GL_TEXTURE_2D_MULTISAMPLE_ARRAY :: 0x9102;
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY :: 0x9103;
GL_TEXTURE_BINDING_2D_MULTISAMPLE :: 0x9104;
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY :: 0x9105;
GL_TEXTURE_SAMPLES :: 0x9106;
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS :: 0x9107;
GL_SAMPLER_2D_MULTISAMPLE :: 0x9108;
GL_INT_SAMPLER_2D_MULTISAMPLE :: 0x9109;
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE :: 0x910A;
GL_SAMPLER_2D_MULTISAMPLE_ARRAY :: 0x910B;
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY :: 0x910C;
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY :: 0x910D;
GL_MAX_COLOR_TEXTURE_SAMPLES :: 0x910E;
GL_MAX_DEPTH_TEXTURE_SAMPLES :: 0x910F;
GL_MAX_INTEGER_SAMPLES :: 0x9110;

// GL_VERSION_3_3
GL_VERTEX_ATTRIB_ARRAY_DIVISOR :: 0x88FE;
GL_SRC1_COLOR :: 0x88F9;
GL_ONE_MINUS_SRC1_COLOR :: 0x88FA;
GL_ONE_MINUS_SRC1_ALPHA :: 0x88FB;
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS :: 0x88FC;
GL_ANY_SAMPLES_PASSED :: 0x8C2F;
GL_SAMPLER_BINDING :: 0x8919;
GL_RGB10_A2UI :: 0x906F;
GL_TEXTURE_SWIZZLE_R :: 0x8E42;
GL_TEXTURE_SWIZZLE_G :: 0x8E43;
GL_TEXTURE_SWIZZLE_B :: 0x8E44;
GL_TEXTURE_SWIZZLE_A :: 0x8E45;
GL_TEXTURE_SWIZZLE_RGBA :: 0x8E46;
GL_TIME_ELAPSED :: 0x88BF;
GL_TIMESTAMP :: 0x8E28;
GL_INT_2_10_10_10_REV :: 0x8D9F;

    // GL_ARB_direct_state_access
GL_TEXTURE_TARGET :: 0x1006;
GL_QUERY_TARGET :: 0x82EA;
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY :: 0x900A;

    // GL_ARB_separate_shader_objects
GL_VERTEX_SHADER_BIT :: 0x00000001;
GL_FRAGMENT_SHADER_BIT :: 0x00000002;
GL_GEOMETRY_SHADER_BIT :: 0x00000004;
GL_TESS_CONTROL_SHADER_BIT :: 0x00000008;
GL_TESS_EVALUATION_SHADER_BIT :: 0x00000010;
GL_ALL_SHADER_BITS :: 0xFFFFFFFF;
GL_PROGRAM_SEPARABLE :: 0x8258;
GL_ACTIVE_PROGRAM :: 0x8259;
GL_PROGRAM_PIPELINE_BINDING :: 0x825A;

    // GL_KHR_debug
GL_DEBUG_OUTPUT_SYNCHRONOUS :: 0x8242;
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH :: 0x8243;
GL_DEBUG_CALLBACK_FUNCTION :: 0x8244;
GL_DEBUG_CALLBACK_USER_PARAM :: 0x8245;
GL_DEBUG_SOURCE_API :: 0x8246;
GL_DEBUG_SOURCE_WINDOW_SYSTEM :: 0x8247;
GL_DEBUG_SOURCE_SHADER_COMPILER :: 0x8248;
GL_DEBUG_SOURCE_THIRD_PARTY :: 0x8249;
GL_DEBUG_SOURCE_APPLICATION :: 0x824A;
GL_DEBUG_SOURCE_OTHER :: 0x824B;
GL_DEBUG_TYPE_ERROR :: 0x824C;
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR :: 0x824D;
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR :: 0x824E;
GL_DEBUG_TYPE_PORTABILITY :: 0x824F;
GL_DEBUG_TYPE_PERFORMANCE :: 0x8250;
GL_DEBUG_TYPE_OTHER :: 0x8251;
GL_DEBUG_TYPE_MARKER :: 0x8268;
GL_DEBUG_TYPE_PUSH_GROUP :: 0x8269;
GL_DEBUG_TYPE_POP_GROUP :: 0x826A;
GL_DEBUG_SEVERITY_NOTIFICATION :: 0x826B;
GL_MAX_DEBUG_GROUP_STACK_DEPTH :: 0x826C;
GL_DEBUG_GROUP_STACK_DEPTH :: 0x826D;
GL_BUFFER :: 0x82E0;
GL_SHADER :: 0x82E1;
GL_PROGRAM :: 0x82E2;
GL_QUERY :: 0x82E3;
GL_PROGRAM_PIPELINE :: 0x82E4;
GL_SAMPLER :: 0x82E6;
GL_MAX_LABEL_LENGTH :: 0x82E8;
GL_MAX_DEBUG_MESSAGE_LENGTH :: 0x9143;
GL_MAX_DEBUG_LOGGED_MESSAGES :: 0x9144;
GL_DEBUG_LOGGED_MESSAGES :: 0x9145;
GL_DEBUG_SEVERITY_HIGH :: 0x9146;
GL_DEBUG_SEVERITY_MEDIUM :: 0x9147;
GL_DEBUG_SEVERITY_LOW :: 0x9148;
GL_DEBUG_OUTPUT :: 0x92E0;
GL_CONTEXT_FLAG_DEBUG_BIT :: 0x00000002;
GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR :: 0x8242;
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR :: 0x8243;
GL_DEBUG_CALLBACK_FUNCTION_KHR :: 0x8244;
GL_DEBUG_CALLBACK_USER_PARAM_KHR :: 0x8245;
GL_DEBUG_SOURCE_API_KHR :: 0x8246;
GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR :: 0x8247;
GL_DEBUG_SOURCE_SHADER_COMPILER_KHR :: 0x8248;
GL_DEBUG_SOURCE_THIRD_PARTY_KHR :: 0x8249;
GL_DEBUG_SOURCE_APPLICATION_KHR :: 0x824A;
GL_DEBUG_SOURCE_OTHER_KHR :: 0x824B;
GL_DEBUG_TYPE_ERROR_KHR :: 0x824C;
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR :: 0x824D;
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR :: 0x824E;
GL_DEBUG_TYPE_PORTABILITY_KHR :: 0x824F;
GL_DEBUG_TYPE_PERFORMANCE_KHR :: 0x8250;
GL_DEBUG_TYPE_OTHER_KHR :: 0x8251;
GL_DEBUG_TYPE_MARKER_KHR :: 0x8268;
GL_DEBUG_TYPE_PUSH_GROUP_KHR :: 0x8269;
GL_DEBUG_TYPE_POP_GROUP_KHR :: 0x826A;
GL_DEBUG_SEVERITY_NOTIFICATION_KHR :: 0x826B;
GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR :: 0x826C;
GL_DEBUG_GROUP_STACK_DEPTH_KHR :: 0x826D;
GL_BUFFER_KHR :: 0x82E0;
GL_SHADER_KHR :: 0x82E1;
GL_PROGRAM_KHR :: 0x82E2;
GL_VERTEX_ARRAY_KHR :: 0x8074;
GL_QUERY_KHR :: 0x82E3;
GL_PROGRAM_PIPELINE_KHR :: 0x82E4;
GL_SAMPLER_KHR :: 0x82E6;
GL_MAX_LABEL_LENGTH_KHR :: 0x82E8;
GL_MAX_DEBUG_MESSAGE_LENGTH_KHR :: 0x9143;
GL_MAX_DEBUG_LOGGED_MESSAGES_KHR :: 0x9144;
GL_DEBUG_LOGGED_MESSAGES_KHR :: 0x9145;
GL_DEBUG_SEVERITY_HIGH_KHR :: 0x9146;
GL_DEBUG_SEVERITY_MEDIUM_KHR :: 0x9147;
GL_DEBUG_SEVERITY_LOW_KHR :: 0x9148;
GL_DEBUG_OUTPUT_KHR :: 0x92E0;
GL_CONTEXT_FLAG_DEBUG_BIT_KHR :: 0x00000002;
GL_STACK_OVERFLOW_KHR :: 0x0503;
GL_STACK_UNDERFLOW_KHR :: 0x0504;

    // GL_EXT_texture_filter_anisotropic
GL_TEXTURE_MAX_ANISOTROPY_EXT :: 0x84FE;
GL_TEXTURE_MAX_ANISOTROPY :: GL_TEXTURE_MAX_ANISOTROPY_EXT;
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT :: 0x84FF;
GL_MAX_TEXTURE_MAX_ANISOTROPY :: GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT;

    // GL_EXT_texture_sRGB
GL_SRGB_EXT :: 0x8C40;
GL_SRGB8_EXT :: 0x8C41;
GL_SRGB_ALPHA_EXT :: 0x8C42;
GL_SRGB8_ALPHA8_EXT :: 0x8C43;
GL_SLUMINANCE_ALPHA_EXT :: 0x8C44;
GL_SLUMINANCE8_ALPHA8_EXT :: 0x8C45;
GL_SLUMINANCE_EXT :: 0x8C46;
GL_SLUMINANCE8_EXT :: 0x8C47;
GL_COMPRESSED_SRGB_EXT :: 0x8C48;
GL_COMPRESSED_SRGB_ALPHA_EXT :: 0x8C49;
GL_COMPRESSED_SLUMINANCE_EXT :: 0x8C4A;
GL_COMPRESSED_SLUMINANCE_ALPHA_EXT :: 0x8C4B;
GL_COMPRESSED_SRGB_S3TC_DXT1_EXT :: 0x8C4C;
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT :: 0x8C4D;
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT :: 0x8C4E;
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT :: 0x8C4F;

    // GL_EXT_texture_compression_s3tc
GL_COMPRESSED_RGB_S3TC_DXT1_EXT :: 0x83F0;
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT :: 0x83F1;
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT :: 0x83F2;
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT :: 0x83F3;

    // GL_ARB_texture_compression_bptc
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB :: 0x8E8C;
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB :: 0x8E8D;
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB :: 0x8E8E;
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB :: 0x8E8F;

    // GL_ARB_internalformat_query2
GL_IMAGE_FORMAT_COMPATIBILITY_TYPE :: 0x90C7;
GL_NUM_SAMPLE_COUNTS :: 0x9380;
GL_TEXTURE_CUBE_MAP_ARRAY :: 0x9009;
GL_INTERNALFORMAT_SUPPORTED :: 0x826F;
GL_INTERNALFORMAT_PREFERRED :: 0x8270;
GL_INTERNALFORMAT_RED_SIZE :: 0x8271;
GL_INTERNALFORMAT_GREEN_SIZE :: 0x8272;
GL_INTERNALFORMAT_BLUE_SIZE :: 0x8273;
GL_INTERNALFORMAT_ALPHA_SIZE :: 0x8274;
GL_INTERNALFORMAT_DEPTH_SIZE :: 0x8275;
GL_INTERNALFORMAT_STENCIL_SIZE :: 0x8276;
GL_INTERNALFORMAT_SHARED_SIZE :: 0x8277;
GL_INTERNALFORMAT_RED_TYPE :: 0x8278;
GL_INTERNALFORMAT_GREEN_TYPE :: 0x8279;
GL_INTERNALFORMAT_BLUE_TYPE :: 0x827A;
GL_INTERNALFORMAT_ALPHA_TYPE :: 0x827B;
GL_INTERNALFORMAT_DEPTH_TYPE :: 0x827C;
GL_INTERNALFORMAT_STENCIL_TYPE :: 0x827D;
GL_MAX_WIDTH :: 0x827E;
GL_MAX_HEIGHT :: 0x827F;
GL_MAX_DEPTH :: 0x8280;
GL_MAX_LAYERS :: 0x8281;
GL_MAX_COMBINED_DIMENSIONS :: 0x8282;
GL_COLOR_COMPONENTS :: 0x8283;
GL_DEPTH_COMPONENTS :: 0x8284;
GL_STENCIL_COMPONENTS :: 0x8285;
GL_COLOR_RENDERABLE :: 0x8286;
GL_DEPTH_RENDERABLE :: 0x8287;
GL_STENCIL_RENDERABLE :: 0x8288;
GL_FRAMEBUFFER_RENDERABLE :: 0x8289;
GL_FRAMEBUFFER_RENDERABLE_LAYERED :: 0x828A;
GL_FRAMEBUFFER_BLEND :: 0x828B;
GL_READ_PIXELS :: 0x828C;
GL_READ_PIXELS_FORMAT :: 0x828D;
GL_READ_PIXELS_TYPE :: 0x828E;
GL_TEXTURE_IMAGE_FORMAT :: 0x828F;
GL_TEXTURE_IMAGE_TYPE :: 0x8290;
GL_GET_TEXTURE_IMAGE_FORMAT :: 0x8291;
GL_GET_TEXTURE_IMAGE_TYPE :: 0x8292;
GL_MIPMAP :: 0x8293;
GL_MANUAL_GENERATE_MIPMAP :: 0x8294;
GL_AUTO_GENERATE_MIPMAP :: 0x8295;  // Should be deprecated
GL_COLOR_ENCODING :: 0x8296;
GL_SRGB_READ :: 0x8297;
GL_SRGB_WRITE :: 0x8298;
GL_SRGB_DECODE_ARB :: 0x8299;
GL_FILTER :: 0x829A;
GL_VERTEX_TEXTURE :: 0x829B;
GL_TESS_CONTROL_TEXTURE :: 0x829C;
GL_TESS_EVALUATION_TEXTURE :: 0x829D;
GL_GEOMETRY_TEXTURE :: 0x829E;
GL_FRAGMENT_TEXTURE :: 0x829F;
GL_COMPUTE_TEXTURE :: 0x82A0;
GL_TEXTURE_SHADOW :: 0x82A1;
GL_TEXTURE_GATHER :: 0x82A2;
GL_TEXTURE_GATHER_SHADOW :: 0x82A3;
GL_SHADER_IMAGE_LOAD :: 0x82A4;
GL_SHADER_IMAGE_STORE :: 0x82A5;
GL_SHADER_IMAGE_ATOMIC :: 0x82A6;
GL_IMAGE_TEXEL_SIZE :: 0x82A7;
GL_IMAGE_COMPATIBILITY_CLASS :: 0x82A8;
GL_IMAGE_PIXEL_FORMAT :: 0x82A9;
GL_IMAGE_PIXEL_TYPE :: 0x82AA;
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST :: 0x82AC;
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST :: 0x82AD;
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE :: 0x82AE;
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE :: 0x82AF;
GL_TEXTURE_COMPRESSED_BLOCK_WIDTH :: 0x82B1;
GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT :: 0x82B2;
GL_TEXTURE_COMPRESSED_BLOCK_SIZE :: 0x82B3;
GL_CLEAR_BUFFER :: 0x82B4;
GL_TEXTURE_VIEW :: 0x82B5;
GL_VIEW_COMPATIBILITY_CLASS :: 0x82B6;
GL_FULL_SUPPORT :: 0x82B7;
GL_CAVEAT_SUPPORT :: 0x82B8;
GL_IMAGE_CLASS_4_X_32 :: 0x82B9;
GL_IMAGE_CLASS_2_X_32 :: 0x82BA;
GL_IMAGE_CLASS_1_X_32 :: 0x82BB;
GL_IMAGE_CLASS_4_X_16 :: 0x82BC;
GL_IMAGE_CLASS_2_X_16 :: 0x82BD;
GL_IMAGE_CLASS_1_X_16 :: 0x82BE;
GL_IMAGE_CLASS_4_X_8 :: 0x82BF;
GL_IMAGE_CLASS_2_X_8 :: 0x82C0;
GL_IMAGE_CLASS_1_X_8 :: 0x82C1;
GL_IMAGE_CLASS_11_11_10 :: 0x82C2;
GL_IMAGE_CLASS_10_10_10_2 :: 0x82C3;
GL_VIEW_CLASS_128_BITS :: 0x82C4;
GL_VIEW_CLASS_96_BITS :: 0x82C5;
GL_VIEW_CLASS_64_BITS :: 0x82C6;
GL_VIEW_CLASS_48_BITS :: 0x82C7;
GL_VIEW_CLASS_32_BITS :: 0x82C8;
GL_VIEW_CLASS_24_BITS :: 0x82C9;
GL_VIEW_CLASS_16_BITS :: 0x82CA;
GL_VIEW_CLASS_8_BITS :: 0x82CB;
GL_VIEW_CLASS_S3TC_DXT1_RGB :: 0x82CC;
GL_VIEW_CLASS_S3TC_DXT1_RGBA :: 0x82CD;
GL_VIEW_CLASS_S3TC_DXT3_RGBA :: 0x82CE;
GL_VIEW_CLASS_S3TC_DXT5_RGBA :: 0x82CF;
GL_VIEW_CLASS_RGTC1_RED :: 0x82D0;
GL_VIEW_CLASS_RGTC2_RG :: 0x82D1;
GL_VIEW_CLASS_BPTC_UNORM :: 0x82D2;
GL_VIEW_CLASS_BPTC_FLOAT :: 0x82D3;
GL_VIEW_CLASS_EAC_R11 :: 0x9383;
GL_VIEW_CLASS_EAC_RG11 :: 0x9384;
GL_VIEW_CLASS_ETC2_RGB :: 0x9385;
GL_VIEW_CLASS_ETC2_RGBA :: 0x9386;
GL_VIEW_CLASS_ETC2_EAC_RGBA :: 0x9387;
GL_VIEW_CLASS_ASTC_4x4_RGBA :: 0x9388;
GL_VIEW_CLASS_ASTC_5x4_RGBA :: 0x9389;
GL_VIEW_CLASS_ASTC_5x5_RGBA :: 0x938A;
GL_VIEW_CLASS_ASTC_6x5_RGBA :: 0x938B;
GL_VIEW_CLASS_ASTC_6x6_RGBA :: 0x938C;
GL_VIEW_CLASS_ASTC_8x5_RGBA :: 0x938D;
GL_VIEW_CLASS_ASTC_8x6_RGBA :: 0x938E;
GL_VIEW_CLASS_ASTC_8x8_RGBA :: 0x938F;
GL_VIEW_CLASS_ASTC_10x5_RGBA :: 0x9390;
GL_VIEW_CLASS_ASTC_10x6_RGBA :: 0x9391;
GL_VIEW_CLASS_ASTC_10x8_RGBA :: 0x9392;
GL_VIEW_CLASS_ASTC_10x10_RGBA :: 0x9393;
GL_VIEW_CLASS_ASTC_12x10_RGBA :: 0x9394;
GL_VIEW_CLASS_ASTC_12x12_RGBA :: 0x9395;

    // GL_ARB_debug_output
GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB :: 0x8242;
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB :: 0x8243;
GL_DEBUG_CALLBACK_FUNCTION_ARB :: 0x8244;
GL_DEBUG_CALLBACK_USER_PARAM_ARB :: 0x8245;
GL_DEBUG_SOURCE_API_ARB :: 0x8246;
GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB :: 0x8247;
GL_DEBUG_SOURCE_SHADER_COMPILER_ARB :: 0x8248;
GL_DEBUG_SOURCE_THIRD_PARTY_ARB :: 0x8249;
GL_DEBUG_SOURCE_APPLICATION_ARB :: 0x824A;
GL_DEBUG_SOURCE_OTHER_ARB :: 0x824B;
GL_DEBUG_TYPE_ERROR_ARB :: 0x824C;
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB :: 0x824D;
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB :: 0x824E;
GL_DEBUG_TYPE_PORTABILITY_ARB :: 0x824F;
GL_DEBUG_TYPE_PERFORMANCE_ARB :: 0x8250;
GL_DEBUG_TYPE_OTHER_ARB :: 0x8251;
GL_MAX_DEBUG_MESSAGE_LENGTH_ARB :: 0x9143;
GL_MAX_DEBUG_LOGGED_MESSAGES_ARB :: 0x9144;
GL_DEBUG_LOGGED_MESSAGES_ARB :: 0x9145;
GL_DEBUG_SEVERITY_HIGH_ARB :: 0x9146;
GL_DEBUG_SEVERITY_MEDIUM_ARB :: 0x9147;
GL_DEBUG_SEVERITY_LOW_ARB :: 0x9148;

GL_Procs :: struct #type_info_procedures_are_void_pointers #type_info_no_size_complaint {
    // GL_VERSION_1_0
    glCullFace: #type (mode: GLenum) #c_call;
    glFrontFace: #type (mode: GLenum) #c_call;
    glHint: #type (target: GLenum, mode: GLenum) #c_call;
    glLineWidth: #type (width: GLfloat) #c_call;
    glPointSize: #type (size: GLfloat) #c_call;
    glPolygonMode: #type (face: GLenum, mode: GLenum) #c_call;
    glScissor: #type (x: GLint, y: GLint, width: GLsizei, height: GLsizei) #c_call;
    glTexParameterf: #type (target: GLenum, pname: GLenum, param: GLfloat) #c_call;
    glTexParameterfv: #type (target: GLenum, pname: GLenum, params: *GLfloat) #c_call;
    glTexParameteri: #type (target: GLenum, pname: GLenum, param: GLint) #c_call;
    glTexParameteriv: #type (target: GLenum, pname: GLenum, params: *GLint) #c_call;
    glTexImage1D: #type (target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: *void) #c_call;
    glTexImage2D: #type (target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: *void) #c_call;
    glDrawBuffer: #type (buf: GLenum) #c_call;
    glClear: #type (mask: GLbitfield) #c_call;
    glClearColor: #type (red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) #c_call;
    glClearStencil: #type (s: GLint) #c_call;
    glClearDepth: #type (depth: GLdouble) #c_call;
    glStencilMask: #type (mask: GLuint) #c_call;
    glColorMask: #type (red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean) #c_call;
    glDepthMask: #type (flag: GLboolean) #c_call;
    glDisable: #type (cap: GLenum) #c_call;
    glEnable: #type (cap: GLenum) #c_call;
    glFinish: #type () #c_call;
    glFlush: #type () #c_call;
    glBlendFunc: #type (sfactor: GLenum, dfactor: GLenum) #c_call;
    glLogicOp: #type (opcode: GLenum) #c_call;
    glStencilFunc: #type (func: GLenum, ref: GLint, mask: GLuint) #c_call;
    glStencilOp: #type (fail: GLenum, zfail: GLenum, zpass: GLenum) #c_call;
    glDepthFunc: #type (func: GLenum) #c_call;
    glPixelStoref: #type (pname: GLenum, param: GLfloat) #c_call;
    glPixelStorei: #type (pname: GLenum, param: GLint) #c_call;
    glReadBuffer: #type (src: GLenum) #c_call;
    glReadPixels: #type (x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: *void) #c_call;
    glGetBooleanv: #type (pname: GLenum, data: *GLboolean) #c_call;
    glGetDoublev: #type (pname: GLenum, data: *GLdouble) #c_call;
    glGetError: #type () -> GLenum #c_call;
    glGetFloatv: #type (pname: GLenum, data: *GLfloat) #c_call;
    glGetIntegerv: #type (pname: GLenum, data: *GLint) #c_call;

/*
 These commands represent strings as GLubyte* instead of GLchar* as represented elsewhere.
             While functionally the same, these commands continue to use GLubyte* as there's no way to
             change the signature of these commands without potentially breaking lots of applications
             using these APIs. For more information, see public issue 363:
             https://github.com/KhronosGroup/OpenGL-Registry/issues/363 
*/
    glGetString: #type (name: GLenum) -> *GLubyte #c_call;
    glGetTexImage: #type (target: GLenum, level: GLint, format: GLenum, type: GLenum, pixels: *void) #c_call;
    glGetTexParameterfv: #type (target: GLenum, pname: GLenum, params: *GLfloat) #c_call;
    glGetTexParameteriv: #type (target: GLenum, pname: GLenum, params: *GLint) #c_call;
    glGetTexLevelParameterfv: #type (target: GLenum, level: GLint, pname: GLenum, params: *GLfloat) #c_call;
    glGetTexLevelParameteriv: #type (target: GLenum, level: GLint, pname: GLenum, params: *GLint) #c_call;
    glIsEnabled: #type (cap: GLenum) -> GLboolean #c_call;
    glDepthRange: #type (n: GLdouble, f: GLdouble) #c_call;
    glViewport: #type (x: GLint, y: GLint, width: GLsizei, height: GLsizei) #c_call;
    glNewList: #type (list: GLuint, mode: GLenum) #c_call;
    glEndList: #type () #c_call;
    glCallList: #type (list: GLuint) #c_call;
    glCallLists: #type (n: GLsizei, type: GLenum, lists: *void) #c_call;
    glDeleteLists: #type (list: GLuint, range: GLsizei) #c_call;
    glGenLists: #type (range: GLsizei) -> GLuint #c_call;
    glListBase: #type (base: GLuint) #c_call;
    glBegin: #type (mode: GLenum) #c_call;
    glBitmap: #type (width: GLsizei, height: GLsizei, xorig: GLfloat, yorig: GLfloat, xmove: GLfloat, ymove: GLfloat, bitmap: *GLubyte) #c_call;
    glColor3b: #type (red: GLbyte, green: GLbyte, blue: GLbyte) #c_call;
    glColor3bv: #type (v: *GLbyte) #c_call;
    glColor3d: #type (red: GLdouble, green: GLdouble, blue: GLdouble) #c_call;
    glColor3dv: #type (v: *GLdouble) #c_call;
    glColor3f: #type (red: GLfloat, green: GLfloat, blue: GLfloat) #c_call;
    glColor3fv: #type (v: *GLfloat) #c_call;
    glColor3i: #type (red: GLint, green: GLint, blue: GLint) #c_call;
    glColor3iv: #type (v: *GLint) #c_call;
    glColor3s: #type (red: GLshort, green: GLshort, blue: GLshort) #c_call;
    glColor3sv: #type (v: *GLshort) #c_call;
    glColor3ub: #type (red: GLubyte, green: GLubyte, blue: GLubyte) #c_call;
    glColor3ubv: #type (v: *GLubyte) #c_call;
    glColor3ui: #type (red: GLuint, green: GLuint, blue: GLuint) #c_call;
    glColor3uiv: #type (v: *GLuint) #c_call;
    glColor3us: #type (red: GLushort, green: GLushort, blue: GLushort) #c_call;
    glColor3usv: #type (v: *GLushort) #c_call;
    glColor4b: #type (red: GLbyte, green: GLbyte, blue: GLbyte, alpha: GLbyte) #c_call;
    glColor4bv: #type (v: *GLbyte) #c_call;
    glColor4d: #type (red: GLdouble, green: GLdouble, blue: GLdouble, alpha: GLdouble) #c_call;
    glColor4dv: #type (v: *GLdouble) #c_call;
    glColor4f: #type (red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) #c_call;
    glColor4fv: #type (v: *GLfloat) #c_call;
    glColor4i: #type (red: GLint, green: GLint, blue: GLint, alpha: GLint) #c_call;
    glColor4iv: #type (v: *GLint) #c_call;
    glColor4s: #type (red: GLshort, green: GLshort, blue: GLshort, alpha: GLshort) #c_call;
    glColor4sv: #type (v: *GLshort) #c_call;
    glColor4ub: #type (red: GLubyte, green: GLubyte, blue: GLubyte, alpha: GLubyte) #c_call;
    glColor4ubv: #type (v: *GLubyte) #c_call;
    glColor4ui: #type (red: GLuint, green: GLuint, blue: GLuint, alpha: GLuint) #c_call;
    glColor4uiv: #type (v: *GLuint) #c_call;
    glColor4us: #type (red: GLushort, green: GLushort, blue: GLushort, alpha: GLushort) #c_call;
    glColor4usv: #type (v: *GLushort) #c_call;
    glEdgeFlag: #type (flag: GLboolean) #c_call;
    glEdgeFlagv: #type (flag: *GLboolean) #c_call;
    glEnd: #type () #c_call;
    glIndexd: #type (c: GLdouble) #c_call;
    glIndexdv: #type (c: *GLdouble) #c_call;
    glIndexf: #type (c: GLfloat) #c_call;
    glIndexfv: #type (c: *GLfloat) #c_call;
    glIndexi: #type (c: GLint) #c_call;
    glIndexiv: #type (c: *GLint) #c_call;
    glIndexs: #type (c: GLshort) #c_call;
    glIndexsv: #type (c: *GLshort) #c_call;
    glNormal3b: #type (nx: GLbyte, ny: GLbyte, nz: GLbyte) #c_call;
    glNormal3bv: #type (v: *GLbyte) #c_call;
    glNormal3d: #type (nx: GLdouble, ny: GLdouble, nz: GLdouble) #c_call;
    glNormal3dv: #type (v: *GLdouble) #c_call;
    glNormal3f: #type (nx: GLfloat, ny: GLfloat, nz: GLfloat) #c_call;
    glNormal3fv: #type (v: *GLfloat) #c_call;
    glNormal3i: #type (nx: GLint, ny: GLint, nz: GLint) #c_call;
    glNormal3iv: #type (v: *GLint) #c_call;
    glNormal3s: #type (nx: GLshort, ny: GLshort, nz: GLshort) #c_call;
    glNormal3sv: #type (v: *GLshort) #c_call;
    glRasterPos2d: #type (x: GLdouble, y: GLdouble) #c_call;
    glRasterPos2dv: #type (v: *GLdouble) #c_call;
    glRasterPos2f: #type (x: GLfloat, y: GLfloat) #c_call;
    glRasterPos2fv: #type (v: *GLfloat) #c_call;
    glRasterPos2i: #type (x: GLint, y: GLint) #c_call;
    glRasterPos2iv: #type (v: *GLint) #c_call;
    glRasterPos2s: #type (x: GLshort, y: GLshort) #c_call;
    glRasterPos2sv: #type (v: *GLshort) #c_call;
    glRasterPos3d: #type (x: GLdouble, y: GLdouble, z: GLdouble) #c_call;
    glRasterPos3dv: #type (v: *GLdouble) #c_call;
    glRasterPos3f: #type (x: GLfloat, y: GLfloat, z: GLfloat) #c_call;
    glRasterPos3fv: #type (v: *GLfloat) #c_call;
    glRasterPos3i: #type (x: GLint, y: GLint, z: GLint) #c_call;
    glRasterPos3iv: #type (v: *GLint) #c_call;
    glRasterPos3s: #type (x: GLshort, y: GLshort, z: GLshort) #c_call;
    glRasterPos3sv: #type (v: *GLshort) #c_call;
    glRasterPos4d: #type (x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) #c_call;
    glRasterPos4dv: #type (v: *GLdouble) #c_call;
    glRasterPos4f: #type (x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) #c_call;
    glRasterPos4fv: #type (v: *GLfloat) #c_call;
    glRasterPos4i: #type (x: GLint, y: GLint, z: GLint, w: GLint) #c_call;
    glRasterPos4iv: #type (v: *GLint) #c_call;
    glRasterPos4s: #type (x: GLshort, y: GLshort, z: GLshort, w: GLshort) #c_call;
    glRasterPos4sv: #type (v: *GLshort) #c_call;
    glRectd: #type (x1: GLdouble, y1: GLdouble, x2: GLdouble, y2: GLdouble) #c_call;
    glRectdv: #type (v1: *GLdouble, v2: *GLdouble) #c_call;
    glRectf: #type (x1: GLfloat, y1: GLfloat, x2: GLfloat, y2: GLfloat) #c_call;
    glRectfv: #type (v1: *GLfloat, v2: *GLfloat) #c_call;
    glRecti: #type (x1: GLint, y1: GLint, x2: GLint, y2: GLint) #c_call;
    glRectiv: #type (v1: *GLint, v2: *GLint) #c_call;
    glRects: #type (x1: GLshort, y1: GLshort, x2: GLshort, y2: GLshort) #c_call;
    glRectsv: #type (v1: *GLshort, v2: *GLshort) #c_call;
    glTexCoord1d: #type (s: GLdouble) #c_call;
    glTexCoord1dv: #type (v: *GLdouble) #c_call;
    glTexCoord1f: #type (s: GLfloat) #c_call;
    glTexCoord1fv: #type (v: *GLfloat) #c_call;
    glTexCoord1i: #type (s: GLint) #c_call;
    glTexCoord1iv: #type (v: *GLint) #c_call;
    glTexCoord1s: #type (s: GLshort) #c_call;
    glTexCoord1sv: #type (v: *GLshort) #c_call;
    glTexCoord2d: #type (s: GLdouble, t: GLdouble) #c_call;
    glTexCoord2dv: #type (v: *GLdouble) #c_call;
    glTexCoord2f: #type (s: GLfloat, t: GLfloat) #c_call;
    glTexCoord2fv: #type (v: *GLfloat) #c_call;
    glTexCoord2i: #type (s: GLint, t: GLint) #c_call;
    glTexCoord2iv: #type (v: *GLint) #c_call;
    glTexCoord2s: #type (s: GLshort, t: GLshort) #c_call;
    glTexCoord2sv: #type (v: *GLshort) #c_call;
    glTexCoord3d: #type (s: GLdouble, t: GLdouble, r: GLdouble) #c_call;
    glTexCoord3dv: #type (v: *GLdouble) #c_call;
    glTexCoord3f: #type (s: GLfloat, t: GLfloat, r: GLfloat) #c_call;
    glTexCoord3fv: #type (v: *GLfloat) #c_call;
    glTexCoord3i: #type (s: GLint, t: GLint, r: GLint) #c_call;
    glTexCoord3iv: #type (v: *GLint) #c_call;
    glTexCoord3s: #type (s: GLshort, t: GLshort, r: GLshort) #c_call;
    glTexCoord3sv: #type (v: *GLshort) #c_call;
    glTexCoord4d: #type (s: GLdouble, t: GLdouble, r: GLdouble, q: GLdouble) #c_call;
    glTexCoord4dv: #type (v: *GLdouble) #c_call;
    glTexCoord4f: #type (s: GLfloat, t: GLfloat, r: GLfloat, q: GLfloat) #c_call;
    glTexCoord4fv: #type (v: *GLfloat) #c_call;
    glTexCoord4i: #type (s: GLint, t: GLint, r: GLint, q: GLint) #c_call;
    glTexCoord4iv: #type (v: *GLint) #c_call;
    glTexCoord4s: #type (s: GLshort, t: GLshort, r: GLshort, q: GLshort) #c_call;
    glTexCoord4sv: #type (v: *GLshort) #c_call;
    glVertex2d: #type (x: GLdouble, y: GLdouble) #c_call;
    glVertex2dv: #type (v: *GLdouble) #c_call;
    glVertex2f: #type (x: GLfloat, y: GLfloat) #c_call;
    glVertex2fv: #type (v: *GLfloat) #c_call;
    glVertex2i: #type (x: GLint, y: GLint) #c_call;
    glVertex2iv: #type (v: *GLint) #c_call;
    glVertex2s: #type (x: GLshort, y: GLshort) #c_call;
    glVertex2sv: #type (v: *GLshort) #c_call;
    glVertex3d: #type (x: GLdouble, y: GLdouble, z: GLdouble) #c_call;
    glVertex3dv: #type (v: *GLdouble) #c_call;
    glVertex3f: #type (x: GLfloat, y: GLfloat, z: GLfloat) #c_call;
    glVertex3fv: #type (v: *GLfloat) #c_call;
    glVertex3i: #type (x: GLint, y: GLint, z: GLint) #c_call;
    glVertex3iv: #type (v: *GLint) #c_call;
    glVertex3s: #type (x: GLshort, y: GLshort, z: GLshort) #c_call;
    glVertex3sv: #type (v: *GLshort) #c_call;
    glVertex4d: #type (x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) #c_call;
    glVertex4dv: #type (v: *GLdouble) #c_call;
    glVertex4f: #type (x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) #c_call;
    glVertex4fv: #type (v: *GLfloat) #c_call;
    glVertex4i: #type (x: GLint, y: GLint, z: GLint, w: GLint) #c_call;
    glVertex4iv: #type (v: *GLint) #c_call;
    glVertex4s: #type (x: GLshort, y: GLshort, z: GLshort, w: GLshort) #c_call;
    glVertex4sv: #type (v: *GLshort) #c_call;
    glClipPlane: #type (plane: GLenum, equation: *GLdouble) #c_call;
    glColorMaterial: #type (face: GLenum, mode: GLenum) #c_call;
    glFogf: #type (pname: GLenum, param: GLfloat) #c_call;
    glFogfv: #type (pname: GLenum, params: *GLfloat) #c_call;
    glFogi: #type (pname: GLenum, param: GLint) #c_call;
    glFogiv: #type (pname: GLenum, params: *GLint) #c_call;
    glLightf: #type (light: GLenum, pname: GLenum, param: GLfloat) #c_call;
    glLightfv: #type (light: GLenum, pname: GLenum, params: *GLfloat) #c_call;
    glLighti: #type (light: GLenum, pname: GLenum, param: GLint) #c_call;
    glLightiv: #type (light: GLenum, pname: GLenum, params: *GLint) #c_call;
    glLightModelf: #type (pname: GLenum, param: GLfloat) #c_call;
    glLightModelfv: #type (pname: GLenum, params: *GLfloat) #c_call;
    glLightModeli: #type (pname: GLenum, param: GLint) #c_call;
    glLightModeliv: #type (pname: GLenum, params: *GLint) #c_call;
    glLineStipple: #type (factor: GLint, pattern: GLushort) #c_call;
    glMaterialf: #type (face: GLenum, pname: GLenum, param: GLfloat) #c_call;
    glMaterialfv: #type (face: GLenum, pname: GLenum, params: *GLfloat) #c_call;
    glMateriali: #type (face: GLenum, pname: GLenum, param: GLint) #c_call;
    glMaterialiv: #type (face: GLenum, pname: GLenum, params: *GLint) #c_call;
    glPolygonStipple: #type (mask: *GLubyte) #c_call;
    glShadeModel: #type (mode: GLenum) #c_call;
    glTexEnvf: #type (target: GLenum, pname: GLenum, param: GLfloat) #c_call;
    glTexEnvfv: #type (target: GLenum, pname: GLenum, params: *GLfloat) #c_call;
    glTexEnvi: #type (target: GLenum, pname: GLenum, param: GLint) #c_call;
    glTexEnviv: #type (target: GLenum, pname: GLenum, params: *GLint) #c_call;
    glTexGend: #type (coord: GLenum, pname: GLenum, param: GLdouble) #c_call;
    glTexGendv: #type (coord: GLenum, pname: GLenum, params: *GLdouble) #c_call;
    glTexGenf: #type (coord: GLenum, pname: GLenum, param: GLfloat) #c_call;
    glTexGenfv: #type (coord: GLenum, pname: GLenum, params: *GLfloat) #c_call;
    glTexGeni: #type (coord: GLenum, pname: GLenum, param: GLint) #c_call;
    glTexGeniv: #type (coord: GLenum, pname: GLenum, params: *GLint) #c_call;
    glFeedbackBuffer: #type (size: GLsizei, type: GLenum, buffer: *GLfloat) #c_call;
    glSelectBuffer: #type (size: GLsizei, buffer: *GLuint) #c_call;
    glRenderMode: #type (mode: GLenum) -> GLint #c_call;
    glInitNames: #type () #c_call;
    glLoadName: #type (name: GLuint) #c_call;
    glPassThrough: #type (token: GLfloat) #c_call;
    glPopName: #type () #c_call;
    glPushName: #type (name: GLuint) #c_call;
    glClearAccum: #type (red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) #c_call;
    glClearIndex: #type (c: GLfloat) #c_call;
    glIndexMask: #type (mask: GLuint) #c_call;
    glAccum: #type (op: GLenum, value: GLfloat) #c_call;
    glPopAttrib: #type () #c_call;
    glPushAttrib: #type (mask: GLbitfield) #c_call;
    glMap1d: #type (target: GLenum, u1: GLdouble, u2: GLdouble, stride: GLint, order: GLint, points: *GLdouble) #c_call;
    glMap1f: #type (target: GLenum, u1: GLfloat, u2: GLfloat, stride: GLint, order: GLint, points: *GLfloat) #c_call;
    glMap2d: #type (target: GLenum, u1: GLdouble, u2: GLdouble, ustride: GLint, uorder: GLint, v1: GLdouble, v2: GLdouble, vstride: GLint, vorder: GLint, points: *GLdouble) #c_call;
    glMap2f: #type (target: GLenum, u1: GLfloat, u2: GLfloat, ustride: GLint, uorder: GLint, v1: GLfloat, v2: GLfloat, vstride: GLint, vorder: GLint, points: *GLfloat) #c_call;
    glMapGrid1d: #type (un: GLint, u1: GLdouble, u2: GLdouble) #c_call;
    glMapGrid1f: #type (un: GLint, u1: GLfloat, u2: GLfloat) #c_call;
    glMapGrid2d: #type (un: GLint, u1: GLdouble, u2: GLdouble, vn: GLint, v1: GLdouble, v2: GLdouble) #c_call;
    glMapGrid2f: #type (un: GLint, u1: GLfloat, u2: GLfloat, vn: GLint, v1: GLfloat, v2: GLfloat) #c_call;
    glEvalCoord1d: #type (u: GLdouble) #c_call;
    glEvalCoord1dv: #type (u: *GLdouble) #c_call;
    glEvalCoord1f: #type (u: GLfloat) #c_call;
    glEvalCoord1fv: #type (u: *GLfloat) #c_call;
    glEvalCoord2d: #type (u: GLdouble, v: GLdouble) #c_call;
    glEvalCoord2dv: #type (u: *GLdouble) #c_call;
    glEvalCoord2f: #type (u: GLfloat, v: GLfloat) #c_call;
    glEvalCoord2fv: #type (u: *GLfloat) #c_call;
    glEvalMesh1: #type (mode: GLenum, i1: GLint, i2: GLint) #c_call;
    glEvalPoint1: #type (i: GLint) #c_call;
    glEvalMesh2: #type (mode: GLenum, i1: GLint, i2: GLint, j1: GLint, j2: GLint) #c_call;
    glEvalPoint2: #type (i: GLint, j: GLint) #c_call;
    glAlphaFunc: #type (func: GLenum, ref: GLfloat) #c_call;
    glPixelZoom: #type (xfactor: GLfloat, yfactor: GLfloat) #c_call;
    glPixelTransferf: #type (pname: GLenum, param: GLfloat) #c_call;
    glPixelTransferi: #type (pname: GLenum, param: GLint) #c_call;
    glPixelMapfv: #type (map: GLenum, mapsize: GLsizei, values: *GLfloat) #c_call;
    glPixelMapuiv: #type (map: GLenum, mapsize: GLsizei, values: *GLuint) #c_call;
    glPixelMapusv: #type (map: GLenum, mapsize: GLsizei, values: *GLushort) #c_call;
    glCopyPixels: #type (x: GLint, y: GLint, width: GLsizei, height: GLsizei, type: GLenum) #c_call;
    glDrawPixels: #type (width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: *void) #c_call;
    glGetClipPlane: #type (plane: GLenum, equation: *GLdouble) #c_call;
    glGetLightfv: #type (light: GLenum, pname: GLenum, params: *GLfloat) #c_call;
    glGetLightiv: #type (light: GLenum, pname: GLenum, params: *GLint) #c_call;
    glGetMapdv: #type (target: GLenum, query: GLenum, v: *GLdouble) #c_call;
    glGetMapfv: #type (target: GLenum, query: GLenum, v: *GLfloat) #c_call;
    glGetMapiv: #type (target: GLenum, query: GLenum, v: *GLint) #c_call;
    glGetMaterialfv: #type (face: GLenum, pname: GLenum, params: *GLfloat) #c_call;
    glGetMaterialiv: #type (face: GLenum, pname: GLenum, params: *GLint) #c_call;
    glGetPixelMapfv: #type (map: GLenum, values: *GLfloat) #c_call;
    glGetPixelMapuiv: #type (map: GLenum, values: *GLuint) #c_call;
    glGetPixelMapusv: #type (map: GLenum, values: *GLushort) #c_call;
    glGetPolygonStipple: #type (mask: *GLubyte) #c_call;
    glGetTexEnvfv: #type (target: GLenum, pname: GLenum, params: *GLfloat) #c_call;
    glGetTexEnviv: #type (target: GLenum, pname: GLenum, params: *GLint) #c_call;
    glGetTexGendv: #type (coord: GLenum, pname: GLenum, params: *GLdouble) #c_call;
    glGetTexGenfv: #type (coord: GLenum, pname: GLenum, params: *GLfloat) #c_call;
    glGetTexGeniv: #type (coord: GLenum, pname: GLenum, params: *GLint) #c_call;
    glIsList: #type (list: GLuint) -> GLboolean #c_call;
    glFrustum: #type (left: GLdouble, right: GLdouble, bottom: GLdouble, top: GLdouble, zNear: GLdouble, zFar: GLdouble) #c_call;
    glLoadIdentity: #type () #c_call;
    glLoadMatrixf: #type (m: *GLfloat) #c_call;
    glLoadMatrixd: #type (m: *GLdouble) #c_call;
    glMatrixMode: #type (mode: GLenum) #c_call;
    glMultMatrixf: #type (m: *GLfloat) #c_call;
    glMultMatrixd: #type (m: *GLdouble) #c_call;
    glOrtho: #type (left: GLdouble, right: GLdouble, bottom: GLdouble, top: GLdouble, zNear: GLdouble, zFar: GLdouble) #c_call;
    glPopMatrix: #type () #c_call;
    glPushMatrix: #type () #c_call;
    glRotated: #type (angle: GLdouble, x: GLdouble, y: GLdouble, z: GLdouble) #c_call;
    glRotatef: #type (angle: GLfloat, x: GLfloat, y: GLfloat, z: GLfloat) #c_call;
    glScaled: #type (x: GLdouble, y: GLdouble, z: GLdouble) #c_call;
    glScalef: #type (x: GLfloat, y: GLfloat, z: GLfloat) #c_call;
    glTranslated: #type (x: GLdouble, y: GLdouble, z: GLdouble) #c_call;
    glTranslatef: #type (x: GLfloat, y: GLfloat, z: GLfloat) #c_call;

    // GL_VERSION_1_1
    glDrawArrays: #type (mode: GLenum, first: GLint, count: GLsizei) #c_call;
    glDrawElements: #type (mode: GLenum, count: GLsizei, type: GLenum, indices: *void) #c_call;
    glGetPointerv: #type (pname: GLenum, params: **void) #c_call;
    glPolygonOffset: #type (factor: GLfloat, units: GLfloat) #c_call;
    glCopyTexImage1D: #type (target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint) #c_call;
    glCopyTexImage2D: #type (target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint) #c_call;
    glCopyTexSubImage1D: #type (target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei) #c_call;
    glCopyTexSubImage2D: #type (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) #c_call;
    glTexSubImage1D: #type (target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type: GLenum, pixels: *void) #c_call;
    glTexSubImage2D: #type (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: *void) #c_call;
    glBindTexture: #type (target: GLenum, texture: GLuint) #c_call;
    glDeleteTextures: #type (n: GLsizei, textures: *GLuint) #c_call;
    glGenTextures: #type (n: GLsizei, textures: *GLuint) #c_call;
    glIsTexture: #type (texture: GLuint) -> GLboolean #c_call;
    glArrayElement: #type (i: GLint) #c_call;
    glColorPointer: #type (size: GLint, type: GLenum, stride: GLsizei, pointer: *void) #c_call;
    glDisableClientState: #type (array: GLenum) #c_call;
    glEdgeFlagPointer: #type (stride: GLsizei, pointer: *void) #c_call;
    glEnableClientState: #type (array: GLenum) #c_call;
    glIndexPointer: #type (type: GLenum, stride: GLsizei, pointer: *void) #c_call;
    glInterleavedArrays: #type (format: GLenum, stride: GLsizei, pointer: *void) #c_call;
    glNormalPointer: #type (type: GLenum, stride: GLsizei, pointer: *void) #c_call;
    glTexCoordPointer: #type (size: GLint, type: GLenum, stride: GLsizei, pointer: *void) #c_call;
    glVertexPointer: #type (size: GLint, type: GLenum, stride: GLsizei, pointer: *void) #c_call;
    glAreTexturesResident: #type (n: GLsizei, textures: *GLuint, residences: *GLboolean) -> GLboolean #c_call;
    glPrioritizeTextures: #type (n: GLsizei, textures: *GLuint, priorities: *GLfloat) #c_call;
    glIndexub: #type (c: GLubyte) #c_call;
    glIndexubv: #type (c: *GLubyte) #c_call;
    glPopClientAttrib: #type () #c_call;
    glPushClientAttrib: #type (mask: GLbitfield) #c_call;

    // GL_VERSION_1_2
    glDrawRangeElements: #type (mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type: GLenum, indices: *void) #c_call;
    glTexImage3D: #type (target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: *void) #c_call;
    glTexSubImage3D: #type (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pixels: *void) #c_call;
    glCopyTexSubImage3D: #type (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) #c_call;

    // GL_VERSION_1_3
    glActiveTexture: #type (texture: GLenum) #c_call;
    glSampleCoverage: #type (value: GLfloat, invert: GLboolean) #c_call;
    glCompressedTexImage3D: #type (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: *void) #c_call;
    glCompressedTexImage2D: #type (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, data: *void) #c_call;
    glCompressedTexImage1D: #type (target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, data: *void) #c_call;
    glCompressedTexSubImage3D: #type (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: *void) #c_call;
    glCompressedTexSubImage2D: #type (target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: *void) #c_call;
    glCompressedTexSubImage1D: #type (target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: *void) #c_call;
    glGetCompressedTexImage: #type (target: GLenum, level: GLint, img: *void) #c_call;
    glClientActiveTexture: #type (texture: GLenum) #c_call;
    glMultiTexCoord1d: #type (target: GLenum, s: GLdouble) #c_call;
    glMultiTexCoord1dv: #type (target: GLenum, v: *GLdouble) #c_call;
    glMultiTexCoord1f: #type (target: GLenum, s: GLfloat) #c_call;
    glMultiTexCoord1fv: #type (target: GLenum, v: *GLfloat) #c_call;
    glMultiTexCoord1i: #type (target: GLenum, s: GLint) #c_call;
    glMultiTexCoord1iv: #type (target: GLenum, v: *GLint) #c_call;
    glMultiTexCoord1s: #type (target: GLenum, s: GLshort) #c_call;
    glMultiTexCoord1sv: #type (target: GLenum, v: *GLshort) #c_call;
    glMultiTexCoord2d: #type (target: GLenum, s: GLdouble, t: GLdouble) #c_call;
    glMultiTexCoord2dv: #type (target: GLenum, v: *GLdouble) #c_call;
    glMultiTexCoord2f: #type (target: GLenum, s: GLfloat, t: GLfloat) #c_call;
    glMultiTexCoord2fv: #type (target: GLenum, v: *GLfloat) #c_call;
    glMultiTexCoord2i: #type (target: GLenum, s: GLint, t: GLint) #c_call;
    glMultiTexCoord2iv: #type (target: GLenum, v: *GLint) #c_call;
    glMultiTexCoord2s: #type (target: GLenum, s: GLshort, t: GLshort) #c_call;
    glMultiTexCoord2sv: #type (target: GLenum, v: *GLshort) #c_call;
    glMultiTexCoord3d: #type (target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble) #c_call;
    glMultiTexCoord3dv: #type (target: GLenum, v: *GLdouble) #c_call;
    glMultiTexCoord3f: #type (target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat) #c_call;
    glMultiTexCoord3fv: #type (target: GLenum, v: *GLfloat) #c_call;
    glMultiTexCoord3i: #type (target: GLenum, s: GLint, t: GLint, r: GLint) #c_call;
    glMultiTexCoord3iv: #type (target: GLenum, v: *GLint) #c_call;
    glMultiTexCoord3s: #type (target: GLenum, s: GLshort, t: GLshort, r: GLshort) #c_call;
    glMultiTexCoord3sv: #type (target: GLenum, v: *GLshort) #c_call;
    glMultiTexCoord4d: #type (target: GLenum, s: GLdouble, t: GLdouble, r: GLdouble, q: GLdouble) #c_call;
    glMultiTexCoord4dv: #type (target: GLenum, v: *GLdouble) #c_call;
    glMultiTexCoord4f: #type (target: GLenum, s: GLfloat, t: GLfloat, r: GLfloat, q: GLfloat) #c_call;
    glMultiTexCoord4fv: #type (target: GLenum, v: *GLfloat) #c_call;
    glMultiTexCoord4i: #type (target: GLenum, s: GLint, t: GLint, r: GLint, q: GLint) #c_call;
    glMultiTexCoord4iv: #type (target: GLenum, v: *GLint) #c_call;
    glMultiTexCoord4s: #type (target: GLenum, s: GLshort, t: GLshort, r: GLshort, q: GLshort) #c_call;
    glMultiTexCoord4sv: #type (target: GLenum, v: *GLshort) #c_call;
    glLoadTransposeMatrixf: #type (m: *GLfloat) #c_call;
    glLoadTransposeMatrixd: #type (m: *GLdouble) #c_call;
    glMultTransposeMatrixf: #type (m: *GLfloat) #c_call;
    glMultTransposeMatrixd: #type (m: *GLdouble) #c_call;

    // GL_VERSION_1_4
    glBlendFuncSeparate: #type (sfactorRGB: GLenum, dfactorRGB: GLenum, sfactorAlpha: GLenum, dfactorAlpha: GLenum) #c_call;
    glMultiDrawArrays: #type (mode: GLenum, first: *GLint, count: *GLsizei, drawcount: GLsizei) #c_call;
    glMultiDrawElements: #type (mode: GLenum, count: *GLsizei, type: GLenum, indices: **void, drawcount: GLsizei) #c_call;
    glPointParameterf: #type (pname: GLenum, param: GLfloat) #c_call;
    glPointParameterfv: #type (pname: GLenum, params: *GLfloat) #c_call;
    glPointParameteri: #type (pname: GLenum, param: GLint) #c_call;
    glPointParameteriv: #type (pname: GLenum, params: *GLint) #c_call;
    glFogCoordf: #type (coord: GLfloat) #c_call;
    glFogCoordfv: #type (coord: *GLfloat) #c_call;
    glFogCoordd: #type (coord: GLdouble) #c_call;
    glFogCoorddv: #type (coord: *GLdouble) #c_call;
    glFogCoordPointer: #type (type: GLenum, stride: GLsizei, pointer: *void) #c_call;
    glSecondaryColor3b: #type (red: GLbyte, green: GLbyte, blue: GLbyte) #c_call;
    glSecondaryColor3bv: #type (v: *GLbyte) #c_call;
    glSecondaryColor3d: #type (red: GLdouble, green: GLdouble, blue: GLdouble) #c_call;
    glSecondaryColor3dv: #type (v: *GLdouble) #c_call;
    glSecondaryColor3f: #type (red: GLfloat, green: GLfloat, blue: GLfloat) #c_call;
    glSecondaryColor3fv: #type (v: *GLfloat) #c_call;
    glSecondaryColor3i: #type (red: GLint, green: GLint, blue: GLint) #c_call;
    glSecondaryColor3iv: #type (v: *GLint) #c_call;
    glSecondaryColor3s: #type (red: GLshort, green: GLshort, blue: GLshort) #c_call;
    glSecondaryColor3sv: #type (v: *GLshort) #c_call;
    glSecondaryColor3ub: #type (red: GLubyte, green: GLubyte, blue: GLubyte) #c_call;
    glSecondaryColor3ubv: #type (v: *GLubyte) #c_call;
    glSecondaryColor3ui: #type (red: GLuint, green: GLuint, blue: GLuint) #c_call;
    glSecondaryColor3uiv: #type (v: *GLuint) #c_call;
    glSecondaryColor3us: #type (red: GLushort, green: GLushort, blue: GLushort) #c_call;
    glSecondaryColor3usv: #type (v: *GLushort) #c_call;
    glSecondaryColorPointer: #type (size: GLint, type: GLenum, stride: GLsizei, pointer: *void) #c_call;
    glWindowPos2d: #type (x: GLdouble, y: GLdouble) #c_call;
    glWindowPos2dv: #type (v: *GLdouble) #c_call;
    glWindowPos2f: #type (x: GLfloat, y: GLfloat) #c_call;
    glWindowPos2fv: #type (v: *GLfloat) #c_call;
    glWindowPos2i: #type (x: GLint, y: GLint) #c_call;
    glWindowPos2iv: #type (v: *GLint) #c_call;
    glWindowPos2s: #type (x: GLshort, y: GLshort) #c_call;
    glWindowPos2sv: #type (v: *GLshort) #c_call;
    glWindowPos3d: #type (x: GLdouble, y: GLdouble, z: GLdouble) #c_call;
    glWindowPos3dv: #type (v: *GLdouble) #c_call;
    glWindowPos3f: #type (x: GLfloat, y: GLfloat, z: GLfloat) #c_call;
    glWindowPos3fv: #type (v: *GLfloat) #c_call;
    glWindowPos3i: #type (x: GLint, y: GLint, z: GLint) #c_call;
    glWindowPos3iv: #type (v: *GLint) #c_call;
    glWindowPos3s: #type (x: GLshort, y: GLshort, z: GLshort) #c_call;
    glWindowPos3sv: #type (v: *GLshort) #c_call;
    glBlendColor: #type (red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat) #c_call;
    glBlendEquation: #type (mode: GLenum) #c_call;

    // GL_VERSION_1_5
    glGenQueries: #type (n: GLsizei, ids: *GLuint) #c_call;
    glDeleteQueries: #type (n: GLsizei, ids: *GLuint) #c_call;
    glIsQuery: #type (id: GLuint) -> GLboolean #c_call;
    glBeginQuery: #type (target: GLenum, id: GLuint) #c_call;
    glEndQuery: #type (target: GLenum) #c_call;
    glGetQueryiv: #type (target: GLenum, pname: GLenum, params: *GLint) #c_call;
    glGetQueryObjectiv: #type (id: GLuint, pname: GLenum, params: *GLint) #c_call;
    glGetQueryObjectuiv: #type (id: GLuint, pname: GLenum, params: *GLuint) #c_call;
    glBindBuffer: #type (target: GLenum, buffer: GLuint) #c_call;
    glDeleteBuffers: #type (n: GLsizei, buffers: *GLuint) #c_call;
    glGenBuffers: #type (n: GLsizei, buffers: *GLuint) #c_call;
    glIsBuffer: #type (buffer: GLuint) -> GLboolean #c_call;
    glBufferData: #type (target: GLenum, size: GLsizeiptr, data: *void, usage: GLenum) #c_call;
    glBufferSubData: #type (target: GLenum, offset: GLintptr, size: GLsizeiptr, data: *void) #c_call;
    glGetBufferSubData: #type (target: GLenum, offset: GLintptr, size: GLsizeiptr, data: *void) #c_call;
    glMapBuffer: #type (target: GLenum, access: GLenum) -> *void #c_call;
    glUnmapBuffer: #type (target: GLenum) -> GLboolean #c_call;
    glGetBufferParameteriv: #type (target: GLenum, pname: GLenum, params: *GLint) #c_call;
    glGetBufferPointerv: #type (target: GLenum, pname: GLenum, params: **void) #c_call;

    // GL_VERSION_2_0
    glBlendEquationSeparate: #type (modeRGB: GLenum, modeAlpha: GLenum) #c_call;
    glDrawBuffers: #type (n: GLsizei, bufs: *GLenum) #c_call;
    glStencilOpSeparate: #type (face: GLenum, sfail: GLenum, dpfail: GLenum, dppass: GLenum) #c_call;
    glStencilFuncSeparate: #type (face: GLenum, func: GLenum, ref: GLint, mask: GLuint) #c_call;
    glStencilMaskSeparate: #type (face: GLenum, mask: GLuint) #c_call;
    glAttachShader: #type (program: GLuint, shader: GLuint) #c_call;
    glBindAttribLocation: #type (program: GLuint, index: GLuint, name: *GLchar) #c_call;
    glCompileShader: #type (shader: GLuint) #c_call;
    glCreateProgram: #type () -> GLuint #c_call;
    glCreateShader: #type (type: GLenum) -> GLuint #c_call;
    glDeleteProgram: #type (program: GLuint) #c_call;
    glDeleteShader: #type (shader: GLuint) #c_call;
    glDetachShader: #type (program: GLuint, shader: GLuint) #c_call;
    glDisableVertexAttribArray: #type (index: GLuint) #c_call;
    glEnableVertexAttribArray: #type (index: GLuint) #c_call;
    glGetActiveAttrib: #type (program: GLuint, index: GLuint, bufSize: GLsizei, length: *GLsizei, size: *GLint, type: *GLenum, name: *GLchar) #c_call;
    glGetActiveUniform: #type (program: GLuint, index: GLuint, bufSize: GLsizei, length: *GLsizei, size: *GLint, type: *GLenum, name: *GLchar) #c_call;
    glGetAttachedShaders: #type (program: GLuint, maxCount: GLsizei, count: *GLsizei, shaders: *GLuint) #c_call;
    glGetAttribLocation: #type (program: GLuint, name: *GLchar) -> GLint #c_call;
    glGetProgramiv: #type (program: GLuint, pname: GLenum, params: *GLint) #c_call;
    glGetProgramInfoLog: #type (program: GLuint, bufSize: GLsizei, length: *GLsizei, infoLog: *GLchar) #c_call;
    glGetShaderiv: #type (shader: GLuint, pname: GLenum, params: *GLint) #c_call;
    glGetShaderInfoLog: #type (shader: GLuint, bufSize: GLsizei, length: *GLsizei, infoLog: *GLchar) #c_call;
    glGetShaderSource: #type (shader: GLuint, bufSize: GLsizei, length: *GLsizei, source: *GLchar) #c_call;
    glGetUniformLocation: #type (program: GLuint, name: *GLchar) -> GLint #c_call;
    glGetUniformfv: #type (program: GLuint, location: GLint, params: *GLfloat) #c_call;
    glGetUniformiv: #type (program: GLuint, location: GLint, params: *GLint) #c_call;
    glGetVertexAttribdv: #type (index: GLuint, pname: GLenum, params: *GLdouble) #c_call;
    glGetVertexAttribfv: #type (index: GLuint, pname: GLenum, params: *GLfloat) #c_call;
    glGetVertexAttribiv: #type (index: GLuint, pname: GLenum, params: *GLint) #c_call;
    glGetVertexAttribPointerv: #type (index: GLuint, pname: GLenum, pointer: **void) #c_call;
    glIsProgram: #type (program: GLuint) -> GLboolean #c_call;
    glIsShader: #type (shader: GLuint) -> GLboolean #c_call;
    glLinkProgram: #type (program: GLuint) #c_call;
    glShaderSource: #type (shader: GLuint, count: GLsizei, string_: **GLchar, length: *GLint) #c_call;
    glUseProgram: #type (program: GLuint) #c_call;
    glUniform1f: #type (location: GLint, v0: GLfloat) #c_call;
    glUniform2f: #type (location: GLint, v0: GLfloat, v1: GLfloat) #c_call;
    glUniform3f: #type (location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat) #c_call;
    glUniform4f: #type (location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat) #c_call;
    glUniform1i: #type (location: GLint, v0: GLint) #c_call;
    glUniform2i: #type (location: GLint, v0: GLint, v1: GLint) #c_call;
    glUniform3i: #type (location: GLint, v0: GLint, v1: GLint, v2: GLint) #c_call;
    glUniform4i: #type (location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint) #c_call;
    glUniform1fv: #type (location: GLint, count: GLsizei, value: *GLfloat) #c_call;
    glUniform2fv: #type (location: GLint, count: GLsizei, value: *GLfloat) #c_call;
    glUniform3fv: #type (location: GLint, count: GLsizei, value: *GLfloat) #c_call;
    glUniform4fv: #type (location: GLint, count: GLsizei, value: *GLfloat) #c_call;
    glUniform1iv: #type (location: GLint, count: GLsizei, value: *GLint) #c_call;
    glUniform2iv: #type (location: GLint, count: GLsizei, value: *GLint) #c_call;
    glUniform3iv: #type (location: GLint, count: GLsizei, value: *GLint) #c_call;
    glUniform4iv: #type (location: GLint, count: GLsizei, value: *GLint) #c_call;
    glUniformMatrix2fv: #type (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glUniformMatrix3fv: #type (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glUniformMatrix4fv: #type (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glValidateProgram: #type (program: GLuint) #c_call;
    glVertexAttrib1d: #type (index: GLuint, x: GLdouble) #c_call;
    glVertexAttrib1dv: #type (index: GLuint, v: *GLdouble) #c_call;
    glVertexAttrib1f: #type (index: GLuint, x: GLfloat) #c_call;
    glVertexAttrib1fv: #type (index: GLuint, v: *GLfloat) #c_call;
    glVertexAttrib1s: #type (index: GLuint, x: GLshort) #c_call;
    glVertexAttrib1sv: #type (index: GLuint, v: *GLshort) #c_call;
    glVertexAttrib2d: #type (index: GLuint, x: GLdouble, y: GLdouble) #c_call;
    glVertexAttrib2dv: #type (index: GLuint, v: *GLdouble) #c_call;
    glVertexAttrib2f: #type (index: GLuint, x: GLfloat, y: GLfloat) #c_call;
    glVertexAttrib2fv: #type (index: GLuint, v: *GLfloat) #c_call;
    glVertexAttrib2s: #type (index: GLuint, x: GLshort, y: GLshort) #c_call;
    glVertexAttrib2sv: #type (index: GLuint, v: *GLshort) #c_call;
    glVertexAttrib3d: #type (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble) #c_call;
    glVertexAttrib3dv: #type (index: GLuint, v: *GLdouble) #c_call;
    glVertexAttrib3f: #type (index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat) #c_call;
    glVertexAttrib3fv: #type (index: GLuint, v: *GLfloat) #c_call;
    glVertexAttrib3s: #type (index: GLuint, x: GLshort, y: GLshort, z: GLshort) #c_call;
    glVertexAttrib3sv: #type (index: GLuint, v: *GLshort) #c_call;
    glVertexAttrib4Nbv: #type (index: GLuint, v: *GLbyte) #c_call;
    glVertexAttrib4Niv: #type (index: GLuint, v: *GLint) #c_call;
    glVertexAttrib4Nsv: #type (index: GLuint, v: *GLshort) #c_call;
    glVertexAttrib4Nub: #type (index: GLuint, x: GLubyte, y: GLubyte, z: GLubyte, w: GLubyte) #c_call;
    glVertexAttrib4Nubv: #type (index: GLuint, v: *GLubyte) #c_call;
    glVertexAttrib4Nuiv: #type (index: GLuint, v: *GLuint) #c_call;
    glVertexAttrib4Nusv: #type (index: GLuint, v: *GLushort) #c_call;
    glVertexAttrib4bv: #type (index: GLuint, v: *GLbyte) #c_call;
    glVertexAttrib4d: #type (index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble) #c_call;
    glVertexAttrib4dv: #type (index: GLuint, v: *GLdouble) #c_call;
    glVertexAttrib4f: #type (index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat) #c_call;
    glVertexAttrib4fv: #type (index: GLuint, v: *GLfloat) #c_call;
    glVertexAttrib4iv: #type (index: GLuint, v: *GLint) #c_call;
    glVertexAttrib4s: #type (index: GLuint, x: GLshort, y: GLshort, z: GLshort, w: GLshort) #c_call;
    glVertexAttrib4sv: #type (index: GLuint, v: *GLshort) #c_call;
    glVertexAttrib4ubv: #type (index: GLuint, v: *GLubyte) #c_call;
    glVertexAttrib4uiv: #type (index: GLuint, v: *GLuint) #c_call;
    glVertexAttrib4usv: #type (index: GLuint, v: *GLushort) #c_call;
    glVertexAttribPointer: #type (index: GLuint, size: GLint, type: GLenum, normalized: GLboolean, stride: GLsizei, pointer: *void) #c_call;

    // GL_VERSION_2_1
    glUniformMatrix2x3fv: #type (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glUniformMatrix3x2fv: #type (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glUniformMatrix2x4fv: #type (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glUniformMatrix4x2fv: #type (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glUniformMatrix3x4fv: #type (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glUniformMatrix4x3fv: #type (location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;

    // GL_VERSION_3_0
    glColorMaski: #type (index: GLuint, r: GLboolean, g: GLboolean, b: GLboolean, a: GLboolean) #c_call;
    glGetBooleani_v: #type (target: GLenum, index: GLuint, data: *GLboolean) #c_call;
    glGetIntegeri_v: #type (target: GLenum, index: GLuint, data: *GLint) #c_call;
    glEnablei: #type (target: GLenum, index: GLuint) #c_call;
    glDisablei: #type (target: GLenum, index: GLuint) #c_call;
    glIsEnabledi: #type (target: GLenum, index: GLuint) -> GLboolean #c_call;
    glBeginTransformFeedback: #type (primitiveMode: GLenum) #c_call;
    glEndTransformFeedback: #type () #c_call;
    glBindBufferRange: #type (target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) #c_call;
    glBindBufferBase: #type (target: GLenum, index: GLuint, buffer: GLuint) #c_call;
    glTransformFeedbackVaryings: #type (program: GLuint, count: GLsizei, varyings: **GLchar, bufferMode: GLenum) #c_call;
    glGetTransformFeedbackVarying: #type (program: GLuint, index: GLuint, bufSize: GLsizei, length: *GLsizei, size: *GLsizei, type: *GLenum, name: *GLchar) #c_call;
    glClampColor: #type (target: GLenum, clamp: GLenum) #c_call;
    glBeginConditionalRender: #type (id: GLuint, mode: GLenum) #c_call;
    glEndConditionalRender: #type () #c_call;
    glVertexAttribIPointer: #type (index: GLuint, size: GLint, type: GLenum, stride: GLsizei, pointer: *void) #c_call;
    glGetVertexAttribIiv: #type (index: GLuint, pname: GLenum, params: *GLint) #c_call;
    glGetVertexAttribIuiv: #type (index: GLuint, pname: GLenum, params: *GLuint) #c_call;
    glVertexAttribI1i: #type (index: GLuint, x: GLint) #c_call;
    glVertexAttribI2i: #type (index: GLuint, x: GLint, y: GLint) #c_call;
    glVertexAttribI3i: #type (index: GLuint, x: GLint, y: GLint, z: GLint) #c_call;
    glVertexAttribI4i: #type (index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint) #c_call;
    glVertexAttribI1ui: #type (index: GLuint, x: GLuint) #c_call;
    glVertexAttribI2ui: #type (index: GLuint, x: GLuint, y: GLuint) #c_call;
    glVertexAttribI3ui: #type (index: GLuint, x: GLuint, y: GLuint, z: GLuint) #c_call;
    glVertexAttribI4ui: #type (index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint) #c_call;
    glVertexAttribI1iv: #type (index: GLuint, v: *GLint) #c_call;
    glVertexAttribI2iv: #type (index: GLuint, v: *GLint) #c_call;
    glVertexAttribI3iv: #type (index: GLuint, v: *GLint) #c_call;
    glVertexAttribI4iv: #type (index: GLuint, v: *GLint) #c_call;
    glVertexAttribI1uiv: #type (index: GLuint, v: *GLuint) #c_call;
    glVertexAttribI2uiv: #type (index: GLuint, v: *GLuint) #c_call;
    glVertexAttribI3uiv: #type (index: GLuint, v: *GLuint) #c_call;
    glVertexAttribI4uiv: #type (index: GLuint, v: *GLuint) #c_call;
    glVertexAttribI4bv: #type (index: GLuint, v: *GLbyte) #c_call;
    glVertexAttribI4sv: #type (index: GLuint, v: *GLshort) #c_call;
    glVertexAttribI4ubv: #type (index: GLuint, v: *GLubyte) #c_call;
    glVertexAttribI4usv: #type (index: GLuint, v: *GLushort) #c_call;
    glGetUniformuiv: #type (program: GLuint, location: GLint, params: *GLuint) #c_call;
    glBindFragDataLocation: #type (program: GLuint, color: GLuint, name: *GLchar) #c_call;
    glGetFragDataLocation: #type (program: GLuint, name: *GLchar) -> GLint #c_call;
    glUniform1ui: #type (location: GLint, v0: GLuint) #c_call;
    glUniform2ui: #type (location: GLint, v0: GLuint, v1: GLuint) #c_call;
    glUniform3ui: #type (location: GLint, v0: GLuint, v1: GLuint, v2: GLuint) #c_call;
    glUniform4ui: #type (location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint) #c_call;
    glUniform1uiv: #type (location: GLint, count: GLsizei, value: *GLuint) #c_call;
    glUniform2uiv: #type (location: GLint, count: GLsizei, value: *GLuint) #c_call;
    glUniform3uiv: #type (location: GLint, count: GLsizei, value: *GLuint) #c_call;
    glUniform4uiv: #type (location: GLint, count: GLsizei, value: *GLuint) #c_call;
    glTexParameterIiv: #type (target: GLenum, pname: GLenum, params: *GLint) #c_call;
    glTexParameterIuiv: #type (target: GLenum, pname: GLenum, params: *GLuint) #c_call;
    glGetTexParameterIiv: #type (target: GLenum, pname: GLenum, params: *GLint) #c_call;
    glGetTexParameterIuiv: #type (target: GLenum, pname: GLenum, params: *GLuint) #c_call;
    glClearBufferiv: #type (buffer: GLenum, drawbuffer: GLint, value: *GLint) #c_call;
    glClearBufferuiv: #type (buffer: GLenum, drawbuffer: GLint, value: *GLuint) #c_call;
    glClearBufferfv: #type (buffer: GLenum, drawbuffer: GLint, value: *GLfloat) #c_call;
    glClearBufferfi: #type (buffer: GLenum, drawbuffer: GLint, depth: GLfloat, stencil: GLint) #c_call;
    glGetStringi: #type (name: GLenum, index: GLuint) -> *GLubyte #c_call;
    glIsRenderbuffer: #type (renderbuffer: GLuint) -> GLboolean #c_call;
    glBindRenderbuffer: #type (target: GLenum, renderbuffer: GLuint) #c_call;
    glDeleteRenderbuffers: #type (n: GLsizei, renderbuffers: *GLuint) #c_call;
    glGenRenderbuffers: #type (n: GLsizei, renderbuffers: *GLuint) #c_call;
    glRenderbufferStorage: #type (target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei) #c_call;
    glGetRenderbufferParameteriv: #type (target: GLenum, pname: GLenum, params: *GLint) #c_call;
    glIsFramebuffer: #type (framebuffer: GLuint) -> GLboolean #c_call;
    glBindFramebuffer: #type (target: GLenum, framebuffer: GLuint) #c_call;
    glDeleteFramebuffers: #type (n: GLsizei, framebuffers: *GLuint) #c_call;
    glGenFramebuffers: #type (n: GLsizei, framebuffers: *GLuint) #c_call;
    glCheckFramebufferStatus: #type (target: GLenum) -> GLenum #c_call;
    glFramebufferTexture1D: #type (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) #c_call;
    glFramebufferTexture2D: #type (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint) #c_call;
    glFramebufferTexture3D: #type (target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, zoffset: GLint) #c_call;
    glFramebufferRenderbuffer: #type (target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint) #c_call;
    glGetFramebufferAttachmentParameteriv: #type (target: GLenum, attachment: GLenum, pname: GLenum, params: *GLint) #c_call;
    glGenerateMipmap: #type (target: GLenum) #c_call;
    glBlitFramebuffer: #type (srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum) #c_call;
    glRenderbufferStorageMultisample: #type (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) #c_call;
    glFramebufferTextureLayer: #type (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint) #c_call;
    glMapBufferRange: #type (target: GLenum, offset: GLintptr, length: GLsizeiptr, access: GLbitfield) -> *void #c_call;
    glFlushMappedBufferRange: #type (target: GLenum, offset: GLintptr, length: GLsizeiptr) #c_call;
    glBindVertexArray: #type (array: GLuint) #c_call;
    glDeleteVertexArrays: #type (n: GLsizei, arrays: *GLuint) #c_call;
    glGenVertexArrays: #type (n: GLsizei, arrays: *GLuint) #c_call;
    glIsVertexArray: #type (array: GLuint) -> GLboolean #c_call;

    // GL_VERSION_3_1
    glDrawArraysInstanced: #type (mode: GLenum, first: GLint, count: GLsizei, instancecount: GLsizei) #c_call;
    glDrawElementsInstanced: #type (mode: GLenum, count: GLsizei, type: GLenum, indices: *void, instancecount: GLsizei) #c_call;
    glTexBuffer: #type (target: GLenum, internalformat: GLenum, buffer: GLuint) #c_call;
    glPrimitiveRestartIndex: #type (index: GLuint) #c_call;
    glCopyBufferSubData: #type (readTarget: GLenum, writeTarget: GLenum, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr) #c_call;
    glGetUniformIndices: #type (program: GLuint, uniformCount: GLsizei, uniformNames: **GLchar, uniformIndices: *GLuint) #c_call;
    glGetActiveUniformsiv: #type (program: GLuint, uniformCount: GLsizei, uniformIndices: *GLuint, pname: GLenum, params: *GLint) #c_call;
    glGetActiveUniformName: #type (program: GLuint, uniformIndex: GLuint, bufSize: GLsizei, length: *GLsizei, uniformName: *GLchar) #c_call;
    glGetUniformBlockIndex: #type (program: GLuint, uniformBlockName: *GLchar) -> GLuint #c_call;
    glGetActiveUniformBlockiv: #type (program: GLuint, uniformBlockIndex: GLuint, pname: GLenum, params: *GLint) #c_call;
    glGetActiveUniformBlockName: #type (program: GLuint, uniformBlockIndex: GLuint, bufSize: GLsizei, length: *GLsizei, uniformBlockName: *GLchar) #c_call;
    glUniformBlockBinding: #type (program: GLuint, uniformBlockIndex: GLuint, uniformBlockBinding: GLuint) #c_call;




    // GL_VERSION_3_2
    glDrawElementsBaseVertex: #type (mode: GLenum, count: GLsizei, type: GLenum, indices: *void, basevertex: GLint) #c_call;
    glDrawRangeElementsBaseVertex: #type (mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type: GLenum, indices: *void, basevertex: GLint) #c_call;
    glDrawElementsInstancedBaseVertex: #type (mode: GLenum, count: GLsizei, type: GLenum, indices: *void, instancecount: GLsizei, basevertex: GLint) #c_call;
    glMultiDrawElementsBaseVertex: #type (mode: GLenum, count: *GLsizei, type: GLenum, indices: **void, drawcount: GLsizei, basevertex: *GLint) #c_call;
    glProvokingVertex: #type (mode: GLenum) #c_call;
    glFenceSync: #type (condition: GLenum, flags: GLbitfield) -> GLsync #c_call;
    glIsSync: #type (sync: GLsync) -> GLboolean #c_call;
    glDeleteSync: #type (sync: GLsync) #c_call;
    glClientWaitSync: #type (sync: GLsync, flags: GLbitfield, timeout: GLuint64) -> GLenum #c_call;
    glWaitSync: #type (sync: GLsync, flags: GLbitfield, timeout: GLuint64) #c_call;
    glGetInteger64v: #type (pname: GLenum, data: *GLint64) #c_call;
    glGetSynciv: #type (sync: GLsync, pname: GLenum, count: GLsizei, length: *GLsizei, values: *GLint) #c_call;
    glGetInteger64i_v: #type (target: GLenum, index: GLuint, data: *GLint64) #c_call;
    glGetBufferParameteri64v: #type (target: GLenum, pname: GLenum, params: *GLint64) #c_call;
    glFramebufferTexture: #type (target: GLenum, attachment: GLenum, texture: GLuint, level: GLint) #c_call;
    glTexImage2DMultisample: #type (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean) #c_call;
    glTexImage3DMultisample: #type (target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean) #c_call;
    glGetMultisamplefv: #type (pname: GLenum, index: GLuint, val: *GLfloat) #c_call;
    glSampleMaski: #type (maskNumber: GLuint, mask: GLbitfield) #c_call;

    // GL_VERSION_3_3
    glBindFragDataLocationIndexed: #type (program: GLuint, colorNumber: GLuint, index: GLuint, name: *GLchar) #c_call;
    glGetFragDataIndex: #type (program: GLuint, name: *GLchar) -> GLint #c_call;
    glGenSamplers: #type (count: GLsizei, samplers: *GLuint) #c_call;
    glDeleteSamplers: #type (count: GLsizei, samplers: *GLuint) #c_call;
    glIsSampler: #type (sampler: GLuint) -> GLboolean #c_call;
    glBindSampler: #type (unit: GLuint, sampler: GLuint) #c_call;
    glSamplerParameteri: #type (sampler: GLuint, pname: GLenum, param: GLint) #c_call;
    glSamplerParameteriv: #type (sampler: GLuint, pname: GLenum, param: *GLint) #c_call;
    glSamplerParameterf: #type (sampler: GLuint, pname: GLenum, param: GLfloat) #c_call;
    glSamplerParameterfv: #type (sampler: GLuint, pname: GLenum, param: *GLfloat) #c_call;
    glSamplerParameterIiv: #type (sampler: GLuint, pname: GLenum, param: *GLint) #c_call;
    glSamplerParameterIuiv: #type (sampler: GLuint, pname: GLenum, param: *GLuint) #c_call;
    glGetSamplerParameteriv: #type (sampler: GLuint, pname: GLenum, params: *GLint) #c_call;
    glGetSamplerParameterIiv: #type (sampler: GLuint, pname: GLenum, params: *GLint) #c_call;
    glGetSamplerParameterfv: #type (sampler: GLuint, pname: GLenum, params: *GLfloat) #c_call;
    glGetSamplerParameterIuiv: #type (sampler: GLuint, pname: GLenum, params: *GLuint) #c_call;
    glQueryCounter: #type (id: GLuint, target: GLenum) #c_call;
    glGetQueryObjecti64v: #type (id: GLuint, pname: GLenum, params: *GLint64) #c_call;
    glGetQueryObjectui64v: #type (id: GLuint, pname: GLenum, params: *GLuint64) #c_call;
    glVertexAttribDivisor: #type (index: GLuint, divisor: GLuint) #c_call;
    glVertexAttribP1ui: #type (index: GLuint, type: GLenum, normalized: GLboolean, value: GLuint) #c_call;
    glVertexAttribP1uiv: #type (index: GLuint, type: GLenum, normalized: GLboolean, value: *GLuint) #c_call;
    glVertexAttribP2ui: #type (index: GLuint, type: GLenum, normalized: GLboolean, value: GLuint) #c_call;
    glVertexAttribP2uiv: #type (index: GLuint, type: GLenum, normalized: GLboolean, value: *GLuint) #c_call;
    glVertexAttribP3ui: #type (index: GLuint, type: GLenum, normalized: GLboolean, value: GLuint) #c_call;
    glVertexAttribP3uiv: #type (index: GLuint, type: GLenum, normalized: GLboolean, value: *GLuint) #c_call;
    glVertexAttribP4ui: #type (index: GLuint, type: GLenum, normalized: GLboolean, value: GLuint) #c_call;
    glVertexAttribP4uiv: #type (index: GLuint, type: GLenum, normalized: GLboolean, value: *GLuint) #c_call;
    glVertexP2ui: #type (type: GLenum, value: GLuint) #c_call;
    glVertexP2uiv: #type (type: GLenum, value: *GLuint) #c_call;
    glVertexP3ui: #type (type: GLenum, value: GLuint) #c_call;
    glVertexP3uiv: #type (type: GLenum, value: *GLuint) #c_call;
    glVertexP4ui: #type (type: GLenum, value: GLuint) #c_call;
    glVertexP4uiv: #type (type: GLenum, value: *GLuint) #c_call;
    glTexCoordP1ui: #type (type: GLenum, coords: GLuint) #c_call;
    glTexCoordP1uiv: #type (type: GLenum, coords: *GLuint) #c_call;
    glTexCoordP2ui: #type (type: GLenum, coords: GLuint) #c_call;
    glTexCoordP2uiv: #type (type: GLenum, coords: *GLuint) #c_call;
    glTexCoordP3ui: #type (type: GLenum, coords: GLuint) #c_call;
    glTexCoordP3uiv: #type (type: GLenum, coords: *GLuint) #c_call;
    glTexCoordP4ui: #type (type: GLenum, coords: GLuint) #c_call;
    glTexCoordP4uiv: #type (type: GLenum, coords: *GLuint) #c_call;
    glMultiTexCoordP1ui: #type (texture: GLenum, type: GLenum, coords: GLuint) #c_call;
    glMultiTexCoordP1uiv: #type (texture: GLenum, type: GLenum, coords: *GLuint) #c_call;
    glMultiTexCoordP2ui: #type (texture: GLenum, type: GLenum, coords: GLuint) #c_call;
    glMultiTexCoordP2uiv: #type (texture: GLenum, type: GLenum, coords: *GLuint) #c_call;
    glMultiTexCoordP3ui: #type (texture: GLenum, type: GLenum, coords: GLuint) #c_call;
    glMultiTexCoordP3uiv: #type (texture: GLenum, type: GLenum, coords: *GLuint) #c_call;
    glMultiTexCoordP4ui: #type (texture: GLenum, type: GLenum, coords: GLuint) #c_call;
    glMultiTexCoordP4uiv: #type (texture: GLenum, type: GLenum, coords: *GLuint) #c_call;
    glNormalP3ui: #type (type: GLenum, coords: GLuint) #c_call;
    glNormalP3uiv: #type (type: GLenum, coords: *GLuint) #c_call;
    glColorP3ui: #type (type: GLenum, color: GLuint) #c_call;
    glColorP3uiv: #type (type: GLenum, color: *GLuint) #c_call;
    glColorP4ui: #type (type: GLenum, color: GLuint) #c_call;
    glColorP4uiv: #type (type: GLenum, color: *GLuint) #c_call;
    glSecondaryColorP3ui: #type (type: GLenum, color: GLuint) #c_call;
    glSecondaryColorP3uiv: #type (type: GLenum, color: *GLuint) #c_call;
}

GL_Ext_Procs :: struct #type_info_procedures_are_void_pointers #type_info_no_size_complaint {
    // GL_ARB_direct_state_access
    GL_ARB_direct_state_access: bool;
    glCreateTransformFeedbacks: #type (n: GLsizei, ids: *GLuint) #c_call;
    glTransformFeedbackBufferBase: #type (xfb: GLuint, index: GLuint, buffer: GLuint) #c_call;
    glTransformFeedbackBufferRange: #type (xfb: GLuint, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) #c_call;
    glGetTransformFeedbackiv: #type (xfb: GLuint, pname: GLenum, param: *GLint) #c_call;
    glGetTransformFeedbacki_v: #type (xfb: GLuint, pname: GLenum, index: GLuint, param: *GLint) #c_call;
    glGetTransformFeedbacki64_v: #type (xfb: GLuint, pname: GLenum, index: GLuint, param: *GLint64) #c_call;
    glCreateBuffers: #type (n: GLsizei, buffers: *GLuint) #c_call;
    glNamedBufferStorage: #type (buffer: GLuint, size: GLsizeiptr, data: *void, flags: GLbitfield) #c_call;
    glNamedBufferData: #type (buffer: GLuint, size: GLsizeiptr, data: *void, usage: GLenum) #c_call;
    glNamedBufferSubData: #type (buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: *void) #c_call;
    glCopyNamedBufferSubData: #type (readBuffer: GLuint, writeBuffer: GLuint, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr) #c_call;
    glClearNamedBufferData: #type (buffer: GLuint, internalformat: GLenum, format: GLenum, type: GLenum, data: *void) #c_call;
    glClearNamedBufferSubData: #type (buffer: GLuint, internalformat: GLenum, offset: GLintptr, size: GLsizeiptr, format: GLenum, type: GLenum, data: *void) #c_call;
    glMapNamedBuffer: #type (buffer: GLuint, access: GLenum) -> *void #c_call;
    glMapNamedBufferRange: #type (buffer: GLuint, offset: GLintptr, length: GLsizeiptr, access: GLbitfield) -> *void #c_call;
    glUnmapNamedBuffer: #type (buffer: GLuint) -> GLboolean #c_call;
    glFlushMappedNamedBufferRange: #type (buffer: GLuint, offset: GLintptr, length: GLsizeiptr) #c_call;
    glGetNamedBufferParameteriv: #type (buffer: GLuint, pname: GLenum, params: *GLint) #c_call;
    glGetNamedBufferParameteri64v: #type (buffer: GLuint, pname: GLenum, params: *GLint64) #c_call;
    glGetNamedBufferPointerv: #type (buffer: GLuint, pname: GLenum, params: **void) #c_call;
    glGetNamedBufferSubData: #type (buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: *void) #c_call;
    glCreateFramebuffers: #type (n: GLsizei, framebuffers: *GLuint) #c_call;
    glNamedFramebufferRenderbuffer: #type (framebuffer: GLuint, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint) #c_call;
    glNamedFramebufferParameteri: #type (framebuffer: GLuint, pname: GLenum, param: GLint) #c_call;
    glNamedFramebufferTexture: #type (framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint) #c_call;
    glNamedFramebufferTextureLayer: #type (framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint) #c_call;
    glNamedFramebufferDrawBuffer: #type (framebuffer: GLuint, buf: GLenum) #c_call;
    glNamedFramebufferDrawBuffers: #type (framebuffer: GLuint, n: GLsizei, bufs: *GLenum) #c_call;
    glNamedFramebufferReadBuffer: #type (framebuffer: GLuint, src: GLenum) #c_call;
    glInvalidateNamedFramebufferData: #type (framebuffer: GLuint, numAttachments: GLsizei, attachments: *GLenum) #c_call;
    glInvalidateNamedFramebufferSubData: #type (framebuffer: GLuint, numAttachments: GLsizei, attachments: *GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei) #c_call;
    glClearNamedFramebufferiv: #type (framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, value: *GLint) #c_call;
    glClearNamedFramebufferuiv: #type (framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, value: *GLuint) #c_call;
    glClearNamedFramebufferfv: #type (framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, value: *GLfloat) #c_call;
    glClearNamedFramebufferfi: #type (framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, depth: GLfloat, stencil: GLint) #c_call;
    glBlitNamedFramebuffer: #type (readFramebuffer: GLuint, drawFramebuffer: GLuint, srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum) #c_call;
    glCheckNamedFramebufferStatus: #type (framebuffer: GLuint, target: GLenum) -> GLenum #c_call;
    glGetNamedFramebufferParameteriv: #type (framebuffer: GLuint, pname: GLenum, param: *GLint) #c_call;
    glGetNamedFramebufferAttachmentParameteriv: #type (framebuffer: GLuint, attachment: GLenum, pname: GLenum, params: *GLint) #c_call;
    glCreateRenderbuffers: #type (n: GLsizei, renderbuffers: *GLuint) #c_call;
    glNamedRenderbufferStorage: #type (renderbuffer: GLuint, internalformat: GLenum, width: GLsizei, height: GLsizei) #c_call;
    glNamedRenderbufferStorageMultisample: #type (renderbuffer: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) #c_call;
    glGetNamedRenderbufferParameteriv: #type (renderbuffer: GLuint, pname: GLenum, params: *GLint) #c_call;
    glCreateTextures: #type (target: GLenum, n: GLsizei, textures: *GLuint) #c_call;
    glTextureBuffer: #type (texture: GLuint, internalformat: GLenum, buffer: GLuint) #c_call;
    glTextureBufferRange: #type (texture: GLuint, internalformat: GLenum, buffer: GLuint, offset: GLintptr, size: GLsizeiptr) #c_call;
    glTextureStorage1D: #type (texture: GLuint, levels: GLsizei, internalformat: GLenum, width: GLsizei) #c_call;
    glTextureStorage2D: #type (texture: GLuint, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei) #c_call;
    glTextureStorage3D: #type (texture: GLuint, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei) #c_call;
    glTextureStorage2DMultisample: #type (texture: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean) #c_call;
    glTextureStorage3DMultisample: #type (texture: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean) #c_call;
    glTextureSubImage1D: #type (texture: GLuint, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, type: GLenum, pixels: *void) #c_call;
    glTextureSubImage2D: #type (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: *void) #c_call;
    glTextureSubImage3D: #type (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pixels: *void) #c_call;
    glCompressedTextureSubImage1D: #type (texture: GLuint, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: *void) #c_call;
    glCompressedTextureSubImage2D: #type (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: *void) #c_call;
    glCompressedTextureSubImage3D: #type (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: *void) #c_call;
    glCopyTextureSubImage1D: #type (texture: GLuint, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei) #c_call;
    glCopyTextureSubImage2D: #type (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) #c_call;
    glCopyTextureSubImage3D: #type (texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei) #c_call;
    glTextureParameterf: #type (texture: GLuint, pname: GLenum, param: GLfloat) #c_call;
    glTextureParameterfv: #type (texture: GLuint, pname: GLenum, param: *GLfloat) #c_call;
    glTextureParameteri: #type (texture: GLuint, pname: GLenum, param: GLint) #c_call;
    glTextureParameterIiv: #type (texture: GLuint, pname: GLenum, params: *GLint) #c_call;
    glTextureParameterIuiv: #type (texture: GLuint, pname: GLenum, params: *GLuint) #c_call;
    glTextureParameteriv: #type (texture: GLuint, pname: GLenum, param: *GLint) #c_call;
    glGenerateTextureMipmap: #type (texture: GLuint) #c_call;
    glBindTextureUnit: #type (unit: GLuint, texture: GLuint) #c_call;
    glGetTextureImage: #type (texture: GLuint, level: GLint, format: GLenum, type: GLenum, bufSize: GLsizei, pixels: *void) #c_call;
    glGetCompressedTextureImage: #type (texture: GLuint, level: GLint, bufSize: GLsizei, pixels: *void) #c_call;
    glGetTextureLevelParameterfv: #type (texture: GLuint, level: GLint, pname: GLenum, params: *GLfloat) #c_call;
    glGetTextureLevelParameteriv: #type (texture: GLuint, level: GLint, pname: GLenum, params: *GLint) #c_call;
    glGetTextureParameterfv: #type (texture: GLuint, pname: GLenum, params: *GLfloat) #c_call;
    glGetTextureParameterIiv: #type (texture: GLuint, pname: GLenum, params: *GLint) #c_call;
    glGetTextureParameterIuiv: #type (texture: GLuint, pname: GLenum, params: *GLuint) #c_call;
    glGetTextureParameteriv: #type (texture: GLuint, pname: GLenum, params: *GLint) #c_call;
    glCreateVertexArrays: #type (n: GLsizei, arrays: *GLuint) #c_call;
    glDisableVertexArrayAttrib: #type (vaobj: GLuint, index: GLuint) #c_call;
    glEnableVertexArrayAttrib: #type (vaobj: GLuint, index: GLuint) #c_call;
    glVertexArrayElementBuffer: #type (vaobj: GLuint, buffer: GLuint) #c_call;
    glVertexArrayVertexBuffer: #type (vaobj: GLuint, bindingindex: GLuint, buffer: GLuint, offset: GLintptr, stride: GLsizei) #c_call;
    glVertexArrayVertexBuffers: #type (vaobj: GLuint, first: GLuint, count: GLsizei, buffers: *GLuint, offsets: *GLintptr, strides: *GLsizei) #c_call;
    glVertexArrayAttribBinding: #type (vaobj: GLuint, attribindex: GLuint, bindingindex: GLuint) #c_call;
    glVertexArrayAttribFormat: #type (vaobj: GLuint, attribindex: GLuint, size: GLint, type: GLenum, normalized: GLboolean, relativeoffset: GLuint) #c_call;
    glVertexArrayAttribIFormat: #type (vaobj: GLuint, attribindex: GLuint, size: GLint, type: GLenum, relativeoffset: GLuint) #c_call;
    glVertexArrayAttribLFormat: #type (vaobj: GLuint, attribindex: GLuint, size: GLint, type: GLenum, relativeoffset: GLuint) #c_call;
    glVertexArrayBindingDivisor: #type (vaobj: GLuint, bindingindex: GLuint, divisor: GLuint) #c_call;
    glGetVertexArrayiv: #type (vaobj: GLuint, pname: GLenum, param: *GLint) #c_call;
    glGetVertexArrayIndexediv: #type (vaobj: GLuint, index: GLuint, pname: GLenum, param: *GLint) #c_call;
    glGetVertexArrayIndexed64iv: #type (vaobj: GLuint, index: GLuint, pname: GLenum, param: *GLint64) #c_call;
    glCreateSamplers: #type (n: GLsizei, samplers: *GLuint) #c_call;
    glCreateProgramPipelines: #type (n: GLsizei, pipelines: *GLuint) #c_call;
    glCreateQueries: #type (target: GLenum, n: GLsizei, ids: *GLuint) #c_call;
    glGetQueryBufferObjecti64v: #type (id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr) #c_call;
    glGetQueryBufferObjectiv: #type (id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr) #c_call;
    glGetQueryBufferObjectui64v: #type (id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr) #c_call;
    glGetQueryBufferObjectuiv: #type (id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr) #c_call;


    // GL_ARB_separate_shader_objects
    GL_ARB_separate_shader_objects: bool;
    glUseProgramStages: #type (pipeline: GLuint, stages: GLbitfield, program: GLuint) #c_call;
    glActiveShaderProgram: #type (pipeline: GLuint, program: GLuint) #c_call;
    glCreateShaderProgramv: #type (type: GLenum, count: GLsizei, strings: **GLchar) -> GLuint #c_call;
    glBindProgramPipeline: #type (pipeline: GLuint) #c_call;
    glDeleteProgramPipelines: #type (n: GLsizei, pipelines: *GLuint) #c_call;
    glGenProgramPipelines: #type (n: GLsizei, pipelines: *GLuint) #c_call;
    glIsProgramPipeline: #type (pipeline: GLuint) -> GLboolean #c_call;
    glGetProgramPipelineiv: #type (pipeline: GLuint, pname: GLenum, params: *GLint) #c_call;
    glProgramParameteri: #type (program: GLuint, pname: GLenum, value: GLint) #c_call;
    glProgramUniform1i: #type (program: GLuint, location: GLint, v0: GLint) #c_call;
    glProgramUniform1iv: #type (program: GLuint, location: GLint, count: GLsizei, value: *GLint) #c_call;
    glProgramUniform1f: #type (program: GLuint, location: GLint, v0: GLfloat) #c_call;
    glProgramUniform1fv: #type (program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) #c_call;
    glProgramUniform1d: #type (program: GLuint, location: GLint, v0: GLdouble) #c_call;
    glProgramUniform1dv: #type (program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) #c_call;
    glProgramUniform1ui: #type (program: GLuint, location: GLint, v0: GLuint) #c_call;
    glProgramUniform1uiv: #type (program: GLuint, location: GLint, count: GLsizei, value: *GLuint) #c_call;
    glProgramUniform2i: #type (program: GLuint, location: GLint, v0: GLint, v1: GLint) #c_call;
    glProgramUniform2iv: #type (program: GLuint, location: GLint, count: GLsizei, value: *GLint) #c_call;
    glProgramUniform2f: #type (program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat) #c_call;
    glProgramUniform2fv: #type (program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) #c_call;
    glProgramUniform2d: #type (program: GLuint, location: GLint, v0: GLdouble, v1: GLdouble) #c_call;
    glProgramUniform2dv: #type (program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) #c_call;
    glProgramUniform2ui: #type (program: GLuint, location: GLint, v0: GLuint, v1: GLuint) #c_call;
    glProgramUniform2uiv: #type (program: GLuint, location: GLint, count: GLsizei, value: *GLuint) #c_call;
    glProgramUniform3i: #type (program: GLuint, location: GLint, v0: GLint, v1: GLint, v2: GLint) #c_call;
    glProgramUniform3iv: #type (program: GLuint, location: GLint, count: GLsizei, value: *GLint) #c_call;
    glProgramUniform3f: #type (program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat) #c_call;
    glProgramUniform3fv: #type (program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) #c_call;
    glProgramUniform3d: #type (program: GLuint, location: GLint, v0: GLdouble, v1: GLdouble, v2: GLdouble) #c_call;
    glProgramUniform3dv: #type (program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) #c_call;
    glProgramUniform3ui: #type (program: GLuint, location: GLint, v0: GLuint, v1: GLuint, v2: GLuint) #c_call;
    glProgramUniform3uiv: #type (program: GLuint, location: GLint, count: GLsizei, value: *GLuint) #c_call;
    glProgramUniform4i: #type (program: GLuint, location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint) #c_call;
    glProgramUniform4iv: #type (program: GLuint, location: GLint, count: GLsizei, value: *GLint) #c_call;
    glProgramUniform4f: #type (program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat) #c_call;
    glProgramUniform4fv: #type (program: GLuint, location: GLint, count: GLsizei, value: *GLfloat) #c_call;
    glProgramUniform4d: #type (program: GLuint, location: GLint, v0: GLdouble, v1: GLdouble, v2: GLdouble, v3: GLdouble) #c_call;
    glProgramUniform4dv: #type (program: GLuint, location: GLint, count: GLsizei, value: *GLdouble) #c_call;
    glProgramUniform4ui: #type (program: GLuint, location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint) #c_call;
    glProgramUniform4uiv: #type (program: GLuint, location: GLint, count: GLsizei, value: *GLuint) #c_call;
    glProgramUniformMatrix2fv: #type (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glProgramUniformMatrix3fv: #type (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glProgramUniformMatrix4fv: #type (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glProgramUniformMatrix2dv: #type (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glProgramUniformMatrix3dv: #type (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glProgramUniformMatrix4dv: #type (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glProgramUniformMatrix2x3fv: #type (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glProgramUniformMatrix3x2fv: #type (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glProgramUniformMatrix2x4fv: #type (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glProgramUniformMatrix4x2fv: #type (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glProgramUniformMatrix3x4fv: #type (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glProgramUniformMatrix4x3fv: #type (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLfloat) #c_call;
    glProgramUniformMatrix2x3dv: #type (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glProgramUniformMatrix3x2dv: #type (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glProgramUniformMatrix2x4dv: #type (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glProgramUniformMatrix4x2dv: #type (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glProgramUniformMatrix3x4dv: #type (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glProgramUniformMatrix4x3dv: #type (program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *GLdouble) #c_call;
    glValidateProgramPipeline: #type (pipeline: GLuint) #c_call;
    glGetProgramPipelineInfoLog: #type (pipeline: GLuint, bufSize: GLsizei, length: *GLsizei, infoLog: *GLchar) #c_call;


    // GL_KHR_debug
    GL_KHR_debug: bool;
    glDebugMessageControl: #type (source: GLenum, type: GLenum, severity: GLenum, count: GLsizei, ids: *GLuint, enabled: GLboolean) #c_call;
    glDebugMessageInsert: #type (source: GLenum, type: GLenum, id: GLuint, severity: GLenum, length: GLsizei, buf: *GLchar) #c_call;
    glDebugMessageCallback: #type (callback: GLDEBUGPROC, userParam: *void) #c_call;
    glGetDebugMessageLog: #type (count: GLuint, bufSize: GLsizei, sources: *GLenum, types: *GLenum, ids: *GLuint, severities: *GLenum, lengths: *GLsizei, messageLog: *GLchar) -> GLuint #c_call;
    glPushDebugGroup: #type (source: GLenum, id: GLuint, length: GLsizei, message: *GLchar) #c_call;
    glPopDebugGroup: #type () #c_call;
    glObjectLabel: #type (identifier: GLenum, name: GLuint, length: GLsizei, label: *GLchar) #c_call;
    glGetObjectLabel: #type (identifier: GLenum, name: GLuint, bufSize: GLsizei, length: *GLsizei, label: *GLchar) #c_call;
    glObjectPtrLabel: #type (ptr: *void, length: GLsizei, label: *GLchar) #c_call;
    glGetObjectPtrLabel: #type (ptr: *void, bufSize: GLsizei, length: *GLsizei, label: *GLchar) #c_call;

    glDebugMessageControlKHR: #type (source: GLenum, type: GLenum, severity: GLenum, count: GLsizei, ids: *GLuint, enabled: GLboolean) #c_call;
    glDebugMessageInsertKHR: #type (source: GLenum, type: GLenum, id: GLuint, severity: GLenum, length: GLsizei, buf: *GLchar) #c_call;
    glDebugMessageCallbackKHR: #type (callback: GLDEBUGPROCKHR, userParam: *void) #c_call;
    glGetDebugMessageLogKHR: #type (count: GLuint, bufSize: GLsizei, sources: *GLenum, types: *GLenum, ids: *GLuint, severities: *GLenum, lengths: *GLsizei, messageLog: *GLchar) -> GLuint #c_call;
    glPushDebugGroupKHR: #type (source: GLenum, id: GLuint, length: GLsizei, message: *GLchar) #c_call;
    glPopDebugGroupKHR: #type () #c_call;
    glObjectLabelKHR: #type (identifier: GLenum, name: GLuint, length: GLsizei, label: *GLchar) #c_call;
    glGetObjectLabelKHR: #type (identifier: GLenum, name: GLuint, bufSize: GLsizei, length: *GLsizei, label: *GLchar) #c_call;
    glObjectPtrLabelKHR: #type (ptr: *void, length: GLsizei, label: *GLchar) #c_call;
    glGetObjectPtrLabelKHR: #type (ptr: *void, bufSize: GLsizei, length: *GLsizei, label: *GLchar) #c_call;
    glGetPointervKHR: #type (pname: GLenum, params: **void) #c_call;


    // GL_ARB_internalformat_query2
    GL_ARB_internalformat_query2: bool;
    glGetInternalformati64v: #type (target: GLenum, internalformat: GLenum, pname: GLenum, count: GLsizei, params: *GLint64) #c_call;


    // GL_ARB_debug_output
    GL_ARB_debug_output: bool;
    glDebugMessageControlARB: #type (source: GLenum, type: GLenum, severity: GLenum, count: GLsizei, ids: *GLuint, enabled: GLboolean) #c_call;
    glDebugMessageInsertARB: #type (source: GLenum, type: GLenum, id: GLuint, severity: GLenum, length: GLsizei, buf: *GLchar) #c_call;
    glDebugMessageCallbackARB: #type (callback: GLDEBUGPROCARB, userParam: *void) #c_call;
    glGetDebugMessageLogARB: #type (count: GLuint, bufSize: GLsizei, sources: *GLenum, types: *GLenum, ids: *GLuint, severities: *GLenum, lengths: *GLsizei, messageLog: *GLchar) -> GLuint #c_call;
}
